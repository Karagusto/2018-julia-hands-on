{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# <center><span style=\"color:red\">Data Analysis in Julia with Dataframes</span></center>\n",
    "### Introduction To DataFrames.jl"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "using DataFrames"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Reading Dataframes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>4.9</td><td>3.0</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>3</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr><tr><th>4</th><td>4.6</td><td>3.1</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>5</th><td>5.0</td><td>3.6</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>6</th><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td>setosa</td></tr><tr><th>7</th><td>4.6</td><td>3.4</td><td>1.4</td><td>0.3</td><td>setosa</td></tr><tr><th>8</th><td>5.0</td><td>3.4</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>9</th><td>4.4</td><td>2.9</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>10</th><td>4.9</td><td>3.1</td><td>1.5</td><td>0.1</td><td>setosa</td></tr><tr><th>11</th><td>5.4</td><td>3.7</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>12</th><td>4.8</td><td>3.4</td><td>1.6</td><td>0.2</td><td>setosa</td></tr><tr><th>13</th><td>4.8</td><td>3.0</td><td>1.4</td><td>0.1</td><td>setosa</td></tr><tr><th>14</th><td>4.3</td><td>3.0</td><td>1.1</td><td>0.1</td><td>setosa</td></tr><tr><th>15</th><td>5.8</td><td>4.0</td><td>1.2</td><td>0.2</td><td>setosa</td></tr><tr><th>16</th><td>5.7</td><td>4.4</td><td>1.5</td><td>0.4</td><td>setosa</td></tr><tr><th>17</th><td>5.4</td><td>3.9</td><td>1.3</td><td>0.4</td><td>setosa</td></tr><tr><th>18</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.3</td><td>setosa</td></tr><tr><th>19</th><td>5.7</td><td>3.8</td><td>1.7</td><td>0.3</td><td>setosa</td></tr><tr><th>20</th><td>5.1</td><td>3.8</td><td>1.5</td><td>0.3</td><td>setosa</td></tr><tr><th>21</th><td>5.4</td><td>3.4</td><td>1.7</td><td>0.2</td><td>setosa</td></tr><tr><th>22</th><td>5.1</td><td>3.7</td><td>1.5</td><td>0.4</td><td>setosa</td></tr><tr><th>23</th><td>4.6</td><td>3.6</td><td>1.0</td><td>0.2</td><td>setosa</td></tr><tr><th>24</th><td>5.1</td><td>3.3</td><td>1.7</td><td>0.5</td><td>setosa</td></tr><tr><th>25</th><td>4.8</td><td>3.4</td><td>1.9</td><td>0.2</td><td>setosa</td></tr><tr><th>26</th><td>5.0</td><td>3.0</td><td>1.6</td><td>0.2</td><td>setosa</td></tr><tr><th>27</th><td>5.0</td><td>3.4</td><td>1.6</td><td>0.4</td><td>setosa</td></tr><tr><th>28</th><td>5.2</td><td>3.5</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>29</th><td>5.2</td><td>3.4</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>30</th><td>4.7</td><td>3.2</td><td>1.6</td><td>0.2</td><td>setosa</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "150×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species     │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼─────────────┤\n",
       "│ 1   │ 5.1          │ 3.5         │ 1.4          │ 0.2         │ \"setosa\"    │\n",
       "│ 2   │ 4.9          │ 3.0         │ 1.4          │ 0.2         │ \"setosa\"    │\n",
       "│ 3   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\"    │\n",
       "│ 4   │ 4.6          │ 3.1         │ 1.5          │ 0.2         │ \"setosa\"    │\n",
       "│ 5   │ 5.0          │ 3.6         │ 1.4          │ 0.2         │ \"setosa\"    │\n",
       "│ 6   │ 5.4          │ 3.9         │ 1.7          │ 0.4         │ \"setosa\"    │\n",
       "│ 7   │ 4.6          │ 3.4         │ 1.4          │ 0.3         │ \"setosa\"    │\n",
       "│ 8   │ 5.0          │ 3.4         │ 1.5          │ 0.2         │ \"setosa\"    │\n",
       "│ 9   │ 4.4          │ 2.9         │ 1.4          │ 0.2         │ \"setosa\"    │\n",
       "│ 10  │ 4.9          │ 3.1         │ 1.5          │ 0.1         │ \"setosa\"    │\n",
       "│ 11  │ 5.4          │ 3.7         │ 1.5          │ 0.2         │ \"setosa\"    │\n",
       "⋮\n",
       "│ 139 │ 6.0          │ 3.0         │ 4.8          │ 1.8         │ \"virginica\" │\n",
       "│ 140 │ 6.9          │ 3.1         │ 5.4          │ 2.1         │ \"virginica\" │\n",
       "│ 141 │ 6.7          │ 3.1         │ 5.6          │ 2.4         │ \"virginica\" │\n",
       "│ 142 │ 6.9          │ 3.1         │ 5.1          │ 2.3         │ \"virginica\" │\n",
       "│ 143 │ 5.8          │ 2.7         │ 5.1          │ 1.9         │ \"virginica\" │\n",
       "│ 144 │ 6.8          │ 3.2         │ 5.9          │ 2.3         │ \"virginica\" │\n",
       "│ 145 │ 6.7          │ 3.3         │ 5.7          │ 2.5         │ \"virginica\" │\n",
       "│ 146 │ 6.7          │ 3.0         │ 5.2          │ 2.3         │ \"virginica\" │\n",
       "│ 147 │ 6.3          │ 2.5         │ 5.0          │ 1.9         │ \"virginica\" │\n",
       "│ 148 │ 6.5          │ 3.0         │ 5.2          │ 2.0         │ \"virginica\" │\n",
       "│ 149 │ 6.2          │ 3.4         │ 5.4          │ 2.3         │ \"virginica\" │\n",
       "│ 150 │ 5.9          │ 3.0         │ 5.1          │ 1.8         │ \"virginica\" │"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = readtable(\"data/iris.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Reading With Delimiter /Separator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>x1_24_M_technician_85711</th></tr></thead><tbody><tr><th>1</th><td>2|53|F|other|94043</td></tr><tr><th>2</th><td>3|23|M|writer|32067</td></tr><tr><th>3</th><td>4|24|M|technician|43537</td></tr><tr><th>4</th><td>5|33|F|other|15213</td></tr><tr><th>5</th><td>6|42|M|executive|98101</td></tr><tr><th>6</th><td>7|57|M|administrator|91344</td></tr><tr><th>7</th><td>8|36|M|administrator|05201</td></tr><tr><th>8</th><td>9|29|M|student|01002</td></tr><tr><th>9</th><td>10|53|M|lawyer|90703</td></tr><tr><th>10</th><td>11|39|F|other|30329</td></tr><tr><th>11</th><td>12|28|F|other|06405</td></tr><tr><th>12</th><td>13|47|M|educator|29206</td></tr><tr><th>13</th><td>14|45|M|scientist|55106</td></tr><tr><th>14</th><td>15|49|F|educator|97301</td></tr><tr><th>15</th><td>16|21|M|entertainment|10309</td></tr><tr><th>16</th><td>17|30|M|programmer|06355</td></tr><tr><th>17</th><td>18|35|F|other|37212</td></tr><tr><th>18</th><td>19|40|M|librarian|02138</td></tr><tr><th>19</th><td>20|42|F|homemaker|95660</td></tr><tr><th>20</th><td>21|26|M|writer|30068</td></tr><tr><th>21</th><td>22|25|M|writer|40206</td></tr><tr><th>22</th><td>23|30|F|artist|48197</td></tr><tr><th>23</th><td>24|21|F|artist|94533</td></tr><tr><th>24</th><td>25|39|M|engineer|55107</td></tr><tr><th>25</th><td>26|49|M|engineer|21044</td></tr><tr><th>26</th><td>27|40|F|librarian|30030</td></tr><tr><th>27</th><td>28|32|M|writer|55369</td></tr><tr><th>28</th><td>29|41|M|programmer|94043</td></tr><tr><th>29</th><td>30|7|M|student|55436</td></tr><tr><th>30</th><td>31|24|M|artist|10003</td></tr><tr><th>&vellip;</th><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "942×1 DataFrames.DataFrame\n",
       "│ Row │ x1_24_M_technician_85711       │\n",
       "├─────┼────────────────────────────────┤\n",
       "│ 1   │ \"2|53|F|other|94043\"           │\n",
       "│ 2   │ \"3|23|M|writer|32067\"          │\n",
       "│ 3   │ \"4|24|M|technician|43537\"      │\n",
       "│ 4   │ \"5|33|F|other|15213\"           │\n",
       "│ 5   │ \"6|42|M|executive|98101\"       │\n",
       "│ 6   │ \"7|57|M|administrator|91344\"   │\n",
       "│ 7   │ \"8|36|M|administrator|05201\"   │\n",
       "│ 8   │ \"9|29|M|student|01002\"         │\n",
       "│ 9   │ \"10|53|M|lawyer|90703\"         │\n",
       "│ 10  │ \"11|39|F|other|30329\"          │\n",
       "│ 11  │ \"12|28|F|other|06405\"          │\n",
       "⋮\n",
       "│ 931 │ \"932|58|M|educator|06437\"      │\n",
       "│ 932 │ \"933|28|M|student|48105\"       │\n",
       "│ 933 │ \"934|61|M|engineer|22902\"      │\n",
       "│ 934 │ \"935|42|M|doctor|66221\"        │\n",
       "│ 935 │ \"936|24|M|other|32789\"         │\n",
       "│ 936 │ \"937|48|M|educator|98072\"      │\n",
       "│ 937 │ \"938|38|F|technician|55038\"    │\n",
       "│ 938 │ \"939|26|F|student|33319\"       │\n",
       "│ 939 │ \"940|32|M|administrator|02215\" │\n",
       "│ 940 │ \"941|20|M|student|97229\"       │\n",
       "│ 941 │ \"942|48|F|librarian|78209\"     │\n",
       "│ 942 │ \"943|22|M|student|77841\"       │"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_delimiter = readtable(\"data/usersdata.txt\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>x1</th><th>x24</th><th>M</th><th>technician</th><th>x85711</th></tr></thead><tbody><tr><th>1</th><td>2</td><td>53</td><td>F</td><td>other</td><td>94043</td></tr><tr><th>2</th><td>3</td><td>23</td><td>M</td><td>writer</td><td>32067</td></tr><tr><th>3</th><td>4</td><td>24</td><td>M</td><td>technician</td><td>43537</td></tr><tr><th>4</th><td>5</td><td>33</td><td>F</td><td>other</td><td>15213</td></tr><tr><th>5</th><td>6</td><td>42</td><td>M</td><td>executive</td><td>98101</td></tr><tr><th>6</th><td>7</td><td>57</td><td>M</td><td>administrator</td><td>91344</td></tr><tr><th>7</th><td>8</td><td>36</td><td>M</td><td>administrator</td><td>05201</td></tr><tr><th>8</th><td>9</td><td>29</td><td>M</td><td>student</td><td>01002</td></tr><tr><th>9</th><td>10</td><td>53</td><td>M</td><td>lawyer</td><td>90703</td></tr><tr><th>10</th><td>11</td><td>39</td><td>F</td><td>other</td><td>30329</td></tr><tr><th>11</th><td>12</td><td>28</td><td>F</td><td>other</td><td>06405</td></tr><tr><th>12</th><td>13</td><td>47</td><td>M</td><td>educator</td><td>29206</td></tr><tr><th>13</th><td>14</td><td>45</td><td>M</td><td>scientist</td><td>55106</td></tr><tr><th>14</th><td>15</td><td>49</td><td>F</td><td>educator</td><td>97301</td></tr><tr><th>15</th><td>16</td><td>21</td><td>M</td><td>entertainment</td><td>10309</td></tr><tr><th>16</th><td>17</td><td>30</td><td>M</td><td>programmer</td><td>06355</td></tr><tr><th>17</th><td>18</td><td>35</td><td>F</td><td>other</td><td>37212</td></tr><tr><th>18</th><td>19</td><td>40</td><td>M</td><td>librarian</td><td>02138</td></tr><tr><th>19</th><td>20</td><td>42</td><td>F</td><td>homemaker</td><td>95660</td></tr><tr><th>20</th><td>21</td><td>26</td><td>M</td><td>writer</td><td>30068</td></tr><tr><th>21</th><td>22</td><td>25</td><td>M</td><td>writer</td><td>40206</td></tr><tr><th>22</th><td>23</td><td>30</td><td>F</td><td>artist</td><td>48197</td></tr><tr><th>23</th><td>24</td><td>21</td><td>F</td><td>artist</td><td>94533</td></tr><tr><th>24</th><td>25</td><td>39</td><td>M</td><td>engineer</td><td>55107</td></tr><tr><th>25</th><td>26</td><td>49</td><td>M</td><td>engineer</td><td>21044</td></tr><tr><th>26</th><td>27</td><td>40</td><td>F</td><td>librarian</td><td>30030</td></tr><tr><th>27</th><td>28</td><td>32</td><td>M</td><td>writer</td><td>55369</td></tr><tr><th>28</th><td>29</td><td>41</td><td>M</td><td>programmer</td><td>94043</td></tr><tr><th>29</th><td>30</td><td>7</td><td>M</td><td>student</td><td>55436</td></tr><tr><th>30</th><td>31</td><td>24</td><td>M</td><td>artist</td><td>10003</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "942×5 DataFrames.DataFrame\n",
       "│ Row │ x1  │ x24 │ M   │ technician      │ x85711  │\n",
       "├─────┼─────┼─────┼─────┼─────────────────┼─────────┤\n",
       "│ 1   │ 2   │ 53  │ \"F\" │ \"other\"         │ \"94043\" │\n",
       "│ 2   │ 3   │ 23  │ \"M\" │ \"writer\"        │ \"32067\" │\n",
       "│ 3   │ 4   │ 24  │ \"M\" │ \"technician\"    │ \"43537\" │\n",
       "│ 4   │ 5   │ 33  │ \"F\" │ \"other\"         │ \"15213\" │\n",
       "│ 5   │ 6   │ 42  │ \"M\" │ \"executive\"     │ \"98101\" │\n",
       "│ 6   │ 7   │ 57  │ \"M\" │ \"administrator\" │ \"91344\" │\n",
       "│ 7   │ 8   │ 36  │ \"M\" │ \"administrator\" │ \"05201\" │\n",
       "│ 8   │ 9   │ 29  │ \"M\" │ \"student\"       │ \"01002\" │\n",
       "│ 9   │ 10  │ 53  │ \"M\" │ \"lawyer\"        │ \"90703\" │\n",
       "│ 10  │ 11  │ 39  │ \"F\" │ \"other\"         │ \"30329\" │\n",
       "│ 11  │ 12  │ 28  │ \"F\" │ \"other\"         │ \"06405\" │\n",
       "⋮\n",
       "│ 931 │ 932 │ 58  │ \"M\" │ \"educator\"      │ \"06437\" │\n",
       "│ 932 │ 933 │ 28  │ \"M\" │ \"student\"       │ \"48105\" │\n",
       "│ 933 │ 934 │ 61  │ \"M\" │ \"engineer\"      │ \"22902\" │\n",
       "│ 934 │ 935 │ 42  │ \"M\" │ \"doctor\"        │ \"66221\" │\n",
       "│ 935 │ 936 │ 24  │ \"M\" │ \"other\"         │ \"32789\" │\n",
       "│ 936 │ 937 │ 48  │ \"M\" │ \"educator\"      │ \"98072\" │\n",
       "│ 937 │ 938 │ 38  │ \"F\" │ \"technician\"    │ \"55038\" │\n",
       "│ 938 │ 939 │ 26  │ \"F\" │ \"student\"       │ \"33319\" │\n",
       "│ 939 │ 940 │ 32  │ \"M\" │ \"administrator\" │ \"02215\" │\n",
       "│ 940 │ 941 │ 20  │ \"M\" │ \"student\"       │ \"97229\" │\n",
       "│ 941 │ 942 │ 48  │ \"F\" │ \"librarian\"     │ \"78209\" │\n",
       "│ 942 │ 943 │ 22  │ \"M\" │ \"student\"       │ \"77841\" │"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_delimiter = readtable(\"data/usersdata.txt\",separator='|')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#### Reading A Selected Number of Rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>4.9</td><td>3.0</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>3</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr><tr><th>4</th><td>4.6</td><td>3.1</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>5</th><td>5.0</td><td>3.6</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>6</th><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td>setosa</td></tr><tr><th>7</th><td>4.6</td><td>3.4</td><td>1.4</td><td>0.3</td><td>setosa</td></tr><tr><th>8</th><td>5.0</td><td>3.4</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>9</th><td>4.4</td><td>2.9</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>10</th><td>4.9</td><td>3.1</td><td>1.5</td><td>0.1</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "10×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 5.1          │ 3.5         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 2   │ 4.9          │ 3.0         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 3   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\" │\n",
       "│ 4   │ 4.6          │ 3.1         │ 1.5          │ 0.2         │ \"setosa\" │\n",
       "│ 5   │ 5.0          │ 3.6         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 6   │ 5.4          │ 3.9         │ 1.7          │ 0.4         │ \"setosa\" │\n",
       "│ 7   │ 4.6          │ 3.4         │ 1.4          │ 0.3         │ \"setosa\" │\n",
       "│ 8   │ 5.0          │ 3.4         │ 1.5          │ 0.2         │ \"setosa\" │\n",
       "│ 9   │ 4.4          │ 2.9         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 10  │ 4.9          │ 3.1         │ 1.5          │ 0.1         │ \"setosa\" │"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_row_10 = readtable(\"data/iris.csv\",nrows=10)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "###  Basic manipulation\n",
    "+ head,tail,describe,size,length"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>4.9</td><td>3.0</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>3</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr><tr><th>4</th><td>4.6</td><td>3.1</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>5</th><td>5.0</td><td>3.6</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>6</th><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "6×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 5.1          │ 3.5         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 2   │ 4.9          │ 3.0         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 3   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\" │\n",
       "│ 4   │ 4.6          │ 3.1         │ 1.5          │ 0.2         │ \"setosa\" │\n",
       "│ 5   │ 5.0          │ 3.6         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 6   │ 5.4          │ 3.9         │ 1.7          │ 0.4         │ \"setosa\" │"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Prints the first 5 rows in the dataframe\n",
    "head(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>4.9</td><td>3.0</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>3</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "3×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 5.1          │ 3.5         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 2   │ 4.9          │ 3.0         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 3   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\" │"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "head(df,3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>6.7</td><td>3.3</td><td>5.7</td><td>2.5</td><td>virginica</td></tr><tr><th>2</th><td>6.7</td><td>3.0</td><td>5.2</td><td>2.3</td><td>virginica</td></tr><tr><th>3</th><td>6.3</td><td>2.5</td><td>5.0</td><td>1.9</td><td>virginica</td></tr><tr><th>4</th><td>6.5</td><td>3.0</td><td>5.2</td><td>2.0</td><td>virginica</td></tr><tr><th>5</th><td>6.2</td><td>3.4</td><td>5.4</td><td>2.3</td><td>virginica</td></tr><tr><th>6</th><td>5.9</td><td>3.0</td><td>5.1</td><td>1.8</td><td>virginica</td></tr></tbody></table>"
      ],
      "text/plain": [
       "6×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species     │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼─────────────┤\n",
       "│ 1   │ 6.7          │ 3.3         │ 5.7          │ 2.5         │ \"virginica\" │\n",
       "│ 2   │ 6.7          │ 3.0         │ 5.2          │ 2.3         │ \"virginica\" │\n",
       "│ 3   │ 6.3          │ 2.5         │ 5.0          │ 1.9         │ \"virginica\" │\n",
       "│ 4   │ 6.5          │ 3.0         │ 5.2          │ 2.0         │ \"virginica\" │\n",
       "│ 5   │ 6.2          │ 3.4         │ 5.4          │ 2.3         │ \"virginica\" │\n",
       "│ 6   │ 5.9          │ 3.0         │ 5.1          │ 1.8         │ \"virginica\" │"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Prints the last rows in the dataframe\n",
    "tail(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>6.7</td><td>3.1</td><td>5.6</td><td>2.4</td><td>virginica</td></tr><tr><th>2</th><td>6.9</td><td>3.1</td><td>5.1</td><td>2.3</td><td>virginica</td></tr><tr><th>3</th><td>5.8</td><td>2.7</td><td>5.1</td><td>1.9</td><td>virginica</td></tr><tr><th>4</th><td>6.8</td><td>3.2</td><td>5.9</td><td>2.3</td><td>virginica</td></tr><tr><th>5</th><td>6.7</td><td>3.3</td><td>5.7</td><td>2.5</td><td>virginica</td></tr><tr><th>6</th><td>6.7</td><td>3.0</td><td>5.2</td><td>2.3</td><td>virginica</td></tr><tr><th>7</th><td>6.3</td><td>2.5</td><td>5.0</td><td>1.9</td><td>virginica</td></tr><tr><th>8</th><td>6.5</td><td>3.0</td><td>5.2</td><td>2.0</td><td>virginica</td></tr><tr><th>9</th><td>6.2</td><td>3.4</td><td>5.4</td><td>2.3</td><td>virginica</td></tr><tr><th>10</th><td>5.9</td><td>3.0</td><td>5.1</td><td>1.8</td><td>virginica</td></tr></tbody></table>"
      ],
      "text/plain": [
       "10×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species     │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼─────────────┤\n",
       "│ 1   │ 6.7          │ 3.1         │ 5.6          │ 2.4         │ \"virginica\" │\n",
       "│ 2   │ 6.9          │ 3.1         │ 5.1          │ 2.3         │ \"virginica\" │\n",
       "│ 3   │ 5.8          │ 2.7         │ 5.1          │ 1.9         │ \"virginica\" │\n",
       "│ 4   │ 6.8          │ 3.2         │ 5.9          │ 2.3         │ \"virginica\" │\n",
       "│ 5   │ 6.7          │ 3.3         │ 5.7          │ 2.5         │ \"virginica\" │\n",
       "│ 6   │ 6.7          │ 3.0         │ 5.2          │ 2.3         │ \"virginica\" │\n",
       "│ 7   │ 6.3          │ 2.5         │ 5.0          │ 1.9         │ \"virginica\" │\n",
       "│ 8   │ 6.5          │ 3.0         │ 5.2          │ 2.0         │ \"virginica\" │\n",
       "│ 9   │ 6.2          │ 3.4         │ 5.4          │ 2.3         │ \"virginica\" │\n",
       "│ 10  │ 5.9          │ 3.0         │ 5.1          │ 1.8         │ \"virginica\" │"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "tail(df,10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "sepal_length\n",
      "Summary Stats:\n",
      "Mean:           5.843333\n",
      "Minimum:        4.300000\n",
      "1st Quartile:   5.100000\n",
      "Median:         5.800000\n",
      "3rd Quartile:   6.400000\n",
      "Maximum:        7.900000\n",
      "Length:         150\n",
      "Type:           Float64\n",
      "Number Missing: 0\n",
      "% Missing:      0.000000\n",
      "\n",
      "sepal_width\n",
      "Summary Stats:\n",
      "Mean:           3.054000\n",
      "Minimum:        2.000000\n",
      "1st Quartile:   2.800000\n",
      "Median:         3.000000\n",
      "3rd Quartile:   3.300000\n",
      "Maximum:        4.400000\n",
      "Length:         150\n",
      "Type:           Float64\n",
      "Number Missing: 0\n",
      "% Missing:      0.000000\n",
      "\n",
      "petal_length\n",
      "Summary Stats:\n",
      "Mean:           3.758667\n",
      "Minimum:        1.000000\n",
      "1st Quartile:   1.600000\n",
      "Median:         4.350000\n",
      "3rd Quartile:   5.100000\n",
      "Maximum:        6.900000\n",
      "Length:         150\n",
      "Type:           Float64\n",
      "Number Missing: 0\n",
      "% Missing:      0.000000\n",
      "\n",
      "petal_width\n",
      "Summary Stats:\n",
      "Mean:           1.198667\n",
      "Minimum:        0.100000\n",
      "1st Quartile:   0.300000\n",
      "Median:         1.300000\n",
      "3rd Quartile:   1.800000\n",
      "Maximum:        2.500000\n",
      "Length:         150\n",
      "Type:           Float64\n",
      "Number Missing: 0\n",
      "% Missing:      0.000000\n",
      "\n",
      "species\n",
      "Summary Stats:\n",
      "Length:         150\n",
      "Type:           String\n",
      "Number Unique:  3\n",
      "Number Missing: 0\n",
      "% Missing:      0.000000\n",
      "\n"
     ]
    }
   ],
   "source": [
    "# Describe and gives a summary of the dataframe\n",
    "describe(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(150, 5)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Gives the size of the dataframe ie number of columns and rows\n",
    "size(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# length of the columns\n",
    "length(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "150"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# number of rows\n",
    "nrow(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# number of columns\n",
    "ncol(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Working with Columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "5-element Array{Symbol,1}:\n",
       " :sepal_length\n",
       " :sepal_width \n",
       " :petal_length\n",
       " :petal_width \n",
       " :species     "
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Show the names of each column /column header\n",
    "names(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "150×5 DataFrames.DataFrame\n",
      "│ Col # │ Name         │ Eltype  │ Missing │\n",
      "├───────┼──────────────┼─────────┼─────────┤\n",
      "│ 1     │ sepal_length │ Float64 │ 0       │\n",
      "│ 2     │ sepal_width  │ Float64 │ 0       │\n",
      "│ 3     │ petal_length │ Float64 │ 0       │\n",
      "│ 4     │ petal_width  │ Float64 │ 0       │\n",
      "│ 5     │ species      │ String  │ 0       │"
     ]
    }
   ],
   "source": [
    "# Show the type of data in each column\n",
    "# df.info() in python\n",
    "showcols(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4-element Array{Symbol,1}:\n",
       " :sepal_width \n",
       " :petal_length\n",
       " :petal_width \n",
       " :species     "
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Selecting Specific Column Header\n",
    "# df.columns[2:5] in python\n",
    "names(df[2:5])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "\"SYMBOL[:SEPAL_LENGTH, :SEPAL_WIDTH, :PETAL_LENGTH, :PETAL_WIDTH, :SPECIES]\""
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Make the header name uppercase\n",
    "# py=> df.columns.str.upper()\n",
    "uppercase(string(names(df)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#names!(df,[:First,:Second])\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Selecting Columns by Name or Symbol\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "150-element DataArrays.DataArray{Float64,1}:\n",
       " 5.1\n",
       " 4.9\n",
       " 4.7\n",
       " 4.6\n",
       " 5.0\n",
       " 5.4\n",
       " 4.6\n",
       " 5.0\n",
       " 4.4\n",
       " 4.9\n",
       " 5.4\n",
       " 4.8\n",
       " 4.8\n",
       " ⋮  \n",
       " 6.0\n",
       " 6.9\n",
       " 6.7\n",
       " 6.9\n",
       " 5.8\n",
       " 6.8\n",
       " 6.7\n",
       " 6.7\n",
       " 6.3\n",
       " 6.5\n",
       " 6.2\n",
       " 5.9"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Syntax  => DataFrame[:column_name]\n",
    "df[:sepal_length]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "150-element DataArrays.DataArray{Float64,1}:\n",
       " 5.1\n",
       " 4.9\n",
       " 4.7\n",
       " 4.6\n",
       " 5.0\n",
       " 5.4\n",
       " 4.6\n",
       " 5.0\n",
       " 4.4\n",
       " 4.9\n",
       " 5.4\n",
       " 4.8\n",
       " 4.8\n",
       " ⋮  \n",
       " 6.0\n",
       " 6.9\n",
       " 6.7\n",
       " 6.9\n",
       " 5.8\n",
       " 6.8\n",
       " 6.7\n",
       " 6.7\n",
       " 6.3\n",
       " 6.5\n",
       " 6.2\n",
       " 5.9"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[Symbol(\"sepal_length\")]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "150-element DataArrays.DataArray{Float64,1}:\n",
       " 1.4\n",
       " 1.4\n",
       " 1.3\n",
       " 1.5\n",
       " 1.4\n",
       " 1.7\n",
       " 1.4\n",
       " 1.5\n",
       " 1.4\n",
       " 1.5\n",
       " 1.5\n",
       " 1.6\n",
       " 1.4\n",
       " ⋮  \n",
       " 4.8\n",
       " 5.4\n",
       " 5.6\n",
       " 5.1\n",
       " 5.1\n",
       " 5.9\n",
       " 5.7\n",
       " 5.2\n",
       " 5.0\n",
       " 5.2\n",
       " 5.4\n",
       " 5.1"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Syntax  => DataFrame[column_number_or_index]\n",
    "df[3]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Selecting Multiple Columns\n",
    "#### Range Selection"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>petal_length</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>1.4</td></tr><tr><th>2</th><td>4.9</td><td>1.4</td></tr><tr><th>3</th><td>4.7</td><td>1.3</td></tr><tr><th>4</th><td>4.6</td><td>1.5</td></tr><tr><th>5</th><td>5.0</td><td>1.4</td></tr><tr><th>6</th><td>5.4</td><td>1.7</td></tr><tr><th>7</th><td>4.6</td><td>1.4</td></tr><tr><th>8</th><td>5.0</td><td>1.5</td></tr><tr><th>9</th><td>4.4</td><td>1.4</td></tr><tr><th>10</th><td>4.9</td><td>1.5</td></tr><tr><th>11</th><td>5.4</td><td>1.5</td></tr><tr><th>12</th><td>4.8</td><td>1.6</td></tr><tr><th>13</th><td>4.8</td><td>1.4</td></tr><tr><th>14</th><td>4.3</td><td>1.1</td></tr><tr><th>15</th><td>5.8</td><td>1.2</td></tr><tr><th>16</th><td>5.7</td><td>1.5</td></tr><tr><th>17</th><td>5.4</td><td>1.3</td></tr><tr><th>18</th><td>5.1</td><td>1.4</td></tr><tr><th>19</th><td>5.7</td><td>1.7</td></tr><tr><th>20</th><td>5.1</td><td>1.5</td></tr><tr><th>21</th><td>5.4</td><td>1.7</td></tr><tr><th>22</th><td>5.1</td><td>1.5</td></tr><tr><th>23</th><td>4.6</td><td>1.0</td></tr><tr><th>24</th><td>5.1</td><td>1.7</td></tr><tr><th>25</th><td>4.8</td><td>1.9</td></tr><tr><th>26</th><td>5.0</td><td>1.6</td></tr><tr><th>27</th><td>5.0</td><td>1.6</td></tr><tr><th>28</th><td>5.2</td><td>1.5</td></tr><tr><th>29</th><td>5.2</td><td>1.4</td></tr><tr><th>30</th><td>4.7</td><td>1.6</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "150×2 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ petal_length │\n",
       "├─────┼──────────────┼──────────────┤\n",
       "│ 1   │ 5.1          │ 1.4          │\n",
       "│ 2   │ 4.9          │ 1.4          │\n",
       "│ 3   │ 4.7          │ 1.3          │\n",
       "│ 4   │ 4.6          │ 1.5          │\n",
       "│ 5   │ 5.0          │ 1.4          │\n",
       "│ 6   │ 5.4          │ 1.7          │\n",
       "│ 7   │ 4.6          │ 1.4          │\n",
       "│ 8   │ 5.0          │ 1.5          │\n",
       "│ 9   │ 4.4          │ 1.4          │\n",
       "│ 10  │ 4.9          │ 1.5          │\n",
       "│ 11  │ 5.4          │ 1.5          │\n",
       "⋮\n",
       "│ 139 │ 6.0          │ 4.8          │\n",
       "│ 140 │ 6.9          │ 5.4          │\n",
       "│ 141 │ 6.7          │ 5.6          │\n",
       "│ 142 │ 6.9          │ 5.1          │\n",
       "│ 143 │ 5.8          │ 5.1          │\n",
       "│ 144 │ 6.8          │ 5.9          │\n",
       "│ 145 │ 6.7          │ 5.7          │\n",
       "│ 146 │ 6.7          │ 5.2          │\n",
       "│ 147 │ 6.3          │ 5.0          │\n",
       "│ 148 │ 6.5          │ 5.2          │\n",
       "│ 149 │ 6.2          │ 5.4          │\n",
       "│ 150 │ 5.9          │ 5.1          │"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Syntax  => DataFrame[[:column_nameA,:column_nameB]]\n",
    "# Syntax  => DataFrame[column_number1:column_number4]\n",
    "df[[:sepal_length,:petal_length]]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_width</th><th>petal_length</th><th>petal_width</th></tr></thead><tbody><tr><th>1</th><td>3.5</td><td>1.4</td><td>0.2</td></tr><tr><th>2</th><td>3.0</td><td>1.4</td><td>0.2</td></tr><tr><th>3</th><td>3.2</td><td>1.3</td><td>0.2</td></tr><tr><th>4</th><td>3.1</td><td>1.5</td><td>0.2</td></tr><tr><th>5</th><td>3.6</td><td>1.4</td><td>0.2</td></tr><tr><th>6</th><td>3.9</td><td>1.7</td><td>0.4</td></tr><tr><th>7</th><td>3.4</td><td>1.4</td><td>0.3</td></tr><tr><th>8</th><td>3.4</td><td>1.5</td><td>0.2</td></tr><tr><th>9</th><td>2.9</td><td>1.4</td><td>0.2</td></tr><tr><th>10</th><td>3.1</td><td>1.5</td><td>0.1</td></tr><tr><th>11</th><td>3.7</td><td>1.5</td><td>0.2</td></tr><tr><th>12</th><td>3.4</td><td>1.6</td><td>0.2</td></tr><tr><th>13</th><td>3.0</td><td>1.4</td><td>0.1</td></tr><tr><th>14</th><td>3.0</td><td>1.1</td><td>0.1</td></tr><tr><th>15</th><td>4.0</td><td>1.2</td><td>0.2</td></tr><tr><th>16</th><td>4.4</td><td>1.5</td><td>0.4</td></tr><tr><th>17</th><td>3.9</td><td>1.3</td><td>0.4</td></tr><tr><th>18</th><td>3.5</td><td>1.4</td><td>0.3</td></tr><tr><th>19</th><td>3.8</td><td>1.7</td><td>0.3</td></tr><tr><th>20</th><td>3.8</td><td>1.5</td><td>0.3</td></tr><tr><th>21</th><td>3.4</td><td>1.7</td><td>0.2</td></tr><tr><th>22</th><td>3.7</td><td>1.5</td><td>0.4</td></tr><tr><th>23</th><td>3.6</td><td>1.0</td><td>0.2</td></tr><tr><th>24</th><td>3.3</td><td>1.7</td><td>0.5</td></tr><tr><th>25</th><td>3.4</td><td>1.9</td><td>0.2</td></tr><tr><th>26</th><td>3.0</td><td>1.6</td><td>0.2</td></tr><tr><th>27</th><td>3.4</td><td>1.6</td><td>0.4</td></tr><tr><th>28</th><td>3.5</td><td>1.5</td><td>0.2</td></tr><tr><th>29</th><td>3.4</td><td>1.4</td><td>0.2</td></tr><tr><th>30</th><td>3.2</td><td>1.6</td><td>0.2</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "150×3 DataFrames.DataFrame\n",
       "│ Row │ sepal_width │ petal_length │ petal_width │\n",
       "├─────┼─────────────┼──────────────┼─────────────┤\n",
       "│ 1   │ 3.5         │ 1.4          │ 0.2         │\n",
       "│ 2   │ 3.0         │ 1.4          │ 0.2         │\n",
       "│ 3   │ 3.2         │ 1.3          │ 0.2         │\n",
       "│ 4   │ 3.1         │ 1.5          │ 0.2         │\n",
       "│ 5   │ 3.6         │ 1.4          │ 0.2         │\n",
       "│ 6   │ 3.9         │ 1.7          │ 0.4         │\n",
       "│ 7   │ 3.4         │ 1.4          │ 0.3         │\n",
       "│ 8   │ 3.4         │ 1.5          │ 0.2         │\n",
       "│ 9   │ 2.9         │ 1.4          │ 0.2         │\n",
       "│ 10  │ 3.1         │ 1.5          │ 0.1         │\n",
       "│ 11  │ 3.7         │ 1.5          │ 0.2         │\n",
       "⋮\n",
       "│ 139 │ 3.0         │ 4.8          │ 1.8         │\n",
       "│ 140 │ 3.1         │ 5.4          │ 2.1         │\n",
       "│ 141 │ 3.1         │ 5.6          │ 2.4         │\n",
       "│ 142 │ 3.1         │ 5.1          │ 2.3         │\n",
       "│ 143 │ 2.7         │ 5.1          │ 1.9         │\n",
       "│ 144 │ 3.2         │ 5.9          │ 2.3         │\n",
       "│ 145 │ 3.3         │ 5.7          │ 2.5         │\n",
       "│ 146 │ 3.0         │ 5.2          │ 2.3         │\n",
       "│ 147 │ 2.5         │ 5.0          │ 1.9         │\n",
       "│ 148 │ 3.0         │ 5.2          │ 2.0         │\n",
       "│ 149 │ 3.4         │ 5.4          │ 2.3         │\n",
       "│ 150 │ 3.0         │ 5.1          │ 1.8         │"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[2:4]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>petal_length</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>1.4</td></tr><tr><th>2</th><td>4.9</td><td>1.4</td></tr><tr><th>3</th><td>4.7</td><td>1.3</td></tr><tr><th>4</th><td>4.6</td><td>1.5</td></tr><tr><th>5</th><td>5.0</td><td>1.4</td></tr><tr><th>6</th><td>5.4</td><td>1.7</td></tr><tr><th>7</th><td>4.6</td><td>1.4</td></tr><tr><th>8</th><td>5.0</td><td>1.5</td></tr><tr><th>9</th><td>4.4</td><td>1.4</td></tr><tr><th>10</th><td>4.9</td><td>1.5</td></tr><tr><th>11</th><td>5.4</td><td>1.5</td></tr><tr><th>12</th><td>4.8</td><td>1.6</td></tr><tr><th>13</th><td>4.8</td><td>1.4</td></tr><tr><th>14</th><td>4.3</td><td>1.1</td></tr><tr><th>15</th><td>5.8</td><td>1.2</td></tr><tr><th>16</th><td>5.7</td><td>1.5</td></tr><tr><th>17</th><td>5.4</td><td>1.3</td></tr><tr><th>18</th><td>5.1</td><td>1.4</td></tr><tr><th>19</th><td>5.7</td><td>1.7</td></tr><tr><th>20</th><td>5.1</td><td>1.5</td></tr><tr><th>21</th><td>5.4</td><td>1.7</td></tr><tr><th>22</th><td>5.1</td><td>1.5</td></tr><tr><th>23</th><td>4.6</td><td>1.0</td></tr><tr><th>24</th><td>5.1</td><td>1.7</td></tr><tr><th>25</th><td>4.8</td><td>1.9</td></tr><tr><th>26</th><td>5.0</td><td>1.6</td></tr><tr><th>27</th><td>5.0</td><td>1.6</td></tr><tr><th>28</th><td>5.2</td><td>1.5</td></tr><tr><th>29</th><td>5.2</td><td>1.4</td></tr><tr><th>30</th><td>4.7</td><td>1.6</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "150×2 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ petal_length │\n",
       "├─────┼──────────────┼──────────────┤\n",
       "│ 1   │ 5.1          │ 1.4          │\n",
       "│ 2   │ 4.9          │ 1.4          │\n",
       "│ 3   │ 4.7          │ 1.3          │\n",
       "│ 4   │ 4.6          │ 1.5          │\n",
       "│ 5   │ 5.0          │ 1.4          │\n",
       "│ 6   │ 5.4          │ 1.7          │\n",
       "│ 7   │ 4.6          │ 1.4          │\n",
       "│ 8   │ 5.0          │ 1.5          │\n",
       "│ 9   │ 4.4          │ 1.4          │\n",
       "│ 10  │ 4.9          │ 1.5          │\n",
       "│ 11  │ 5.4          │ 1.5          │\n",
       "⋮\n",
       "│ 139 │ 6.0          │ 4.8          │\n",
       "│ 140 │ 6.9          │ 5.4          │\n",
       "│ 141 │ 6.7          │ 5.6          │\n",
       "│ 142 │ 6.9          │ 5.1          │\n",
       "│ 143 │ 5.8          │ 5.1          │\n",
       "│ 144 │ 6.8          │ 5.9          │\n",
       "│ 145 │ 6.7          │ 5.7          │\n",
       "│ 146 │ 6.7          │ 5.2          │\n",
       "│ 147 │ 6.3          │ 5.0          │\n",
       "│ 148 │ 6.5          │ 5.2          │\n",
       "│ 149 │ 6.2          │ 5.4          │\n",
       "│ 150 │ 5.9          │ 5.1          │"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Syntax => DataFrame[row,column]\n",
    "# Select All Columns of Sepal...\n",
    "df[:,[:sepal_length,:petal_length]]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Working On Rows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "150"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Number of rows\n",
    "nrow(df)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "1×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\" │"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Selecting a Row \n",
    "# Select row 2 with all it columns\n",
    "df[3,:]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.3"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select  row of a specific column\n",
    "df[3,3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>4.9</td><td>3.0</td><td>1.4</td><td>0.2</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "1×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 4.9          │ 3.0         │ 1.4          │ 0.2         │ \"setosa\" │"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# loc,iloc equivalent in Julia\n",
    "# Location Index Location\n",
    "#eg df.loc[2]\n",
    "df[2,:]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.1</td><td>3.5</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>4.7</td><td>3.2</td><td>1.3</td><td>0.2</td><td>setosa</td></tr><tr><th>3</th><td>5.8</td><td>4.0</td><td>1.2</td><td>0.2</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "3×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 5.1          │ 3.5         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 2   │ 4.7          │ 3.2         │ 1.3          │ 0.2         │ \"setosa\" │\n",
       "│ 3   │ 5.8          │ 4.0         │ 1.2          │ 0.2         │ \"setosa\" │"
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Selecting Specific Individual Rows and Columns\n",
    "# Syntax => DataFrame[[row1,row3],[columns]]\n",
    "#eg df.loc[0:2,:]\n",
    "#eg df.loc[[rows1,rows3],:]\n",
    "\n",
    "df[[1,3,15],:]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th></tr></thead><tbody><tr><th>1</th><td>4.9</td><td>3.0</td></tr><tr><th>2</th><td>4.6</td><td>3.1</td></tr><tr><th>3</th><td>5.4</td><td>3.9</td></tr></tbody></table>"
      ],
      "text/plain": [
       "3×2 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │\n",
       "├─────┼──────────────┼─────────────┤\n",
       "│ 1   │ 4.9          │ 3.0         │\n",
       "│ 2   │ 4.6          │ 3.1         │\n",
       "│ 3   │ 5.4          │ 3.9         │"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Select individual Row 2,4,6 of Columns Sepal_length and Sepal_Width]\n",
    "df[[2,4,6],[:sepal_length,:sepal_width]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_length</th><th>sepal_width</th><th>petal_length</th><th>petal_width</th><th>species</th></tr></thead><tbody><tr><th>1</th><td>5.0</td><td>3.6</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>2</th><td>5.4</td><td>3.9</td><td>1.7</td><td>0.4</td><td>setosa</td></tr><tr><th>3</th><td>4.6</td><td>3.4</td><td>1.4</td><td>0.3</td><td>setosa</td></tr><tr><th>4</th><td>5.0</td><td>3.4</td><td>1.5</td><td>0.2</td><td>setosa</td></tr><tr><th>5</th><td>4.4</td><td>2.9</td><td>1.4</td><td>0.2</td><td>setosa</td></tr><tr><th>6</th><td>4.9</td><td>3.1</td><td>1.5</td><td>0.1</td><td>setosa</td></tr></tbody></table>"
      ],
      "text/plain": [
       "6×5 DataFrames.DataFrame\n",
       "│ Row │ sepal_length │ sepal_width │ petal_length │ petal_width │ species  │\n",
       "├─────┼──────────────┼─────────────┼──────────────┼─────────────┼──────────┤\n",
       "│ 1   │ 5.0          │ 3.6         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 2   │ 5.4          │ 3.9         │ 1.7          │ 0.4         │ \"setosa\" │\n",
       "│ 3   │ 4.6          │ 3.4         │ 1.4          │ 0.3         │ \"setosa\" │\n",
       "│ 4   │ 5.0          │ 3.4         │ 1.5          │ 0.2         │ \"setosa\" │\n",
       "│ 5   │ 4.4          │ 2.9         │ 1.4          │ 0.2         │ \"setosa\" │\n",
       "│ 6   │ 4.9          │ 3.1         │ 1.5          │ 0.1         │ \"setosa\" │"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Iloc \n",
    "#Range Selection of Columns and Rows\n",
    "#eg py => df.iloc[5:10]\n",
    "df[5:10,:]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_width</th><th>petal_width</th></tr></thead><tbody><tr><th>1</th><td>3.2</td><td>0.2</td></tr></tbody></table>"
      ],
      "text/plain": [
       "1×2 DataFrames.DataFrame\n",
       "│ Row │ sepal_width │ petal_width │\n",
       "├─────┼─────────────┼─────────────┤\n",
       "│ 1   │ 3.2         │ 0.2         │"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Select 3rd Row of Columns 2 to 4\n",
    "# py=>df[df.columns[2:4]].iloc[3]\n",
    "df[3,[2,4]]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>sepal_width</th><th>petal_length</th><th>petal_width</th></tr></thead><tbody><tr><th>1</th><td>3.2</td><td>1.3</td><td>0.2</td></tr></tbody></table>"
      ],
      "text/plain": [
       "1×3 DataFrames.DataFrame\n",
       "│ Row │ sepal_width │ petal_length │ petal_width │\n",
       "├─────┼─────────────┼──────────────┼─────────────┤\n",
       "│ 1   │ 3.2         │ 1.3          │ 0.2         │"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df[3,names(df[2:4])]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### Iterating Over Rows and Columns\n",
    "* Iteration\n",
    "+ df.iteritems() Columns Index == eachcol\n",
    "+ df.iterrows() Row-index,Series == eachrows"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "DataFrameRow (row 1)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.5\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 2)\n",
      "sepal_length  4.9\n",
      "sepal_width   3.0\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 3)\n",
      "sepal_length  4.7\n",
      "sepal_width   3.2\n",
      "petal_length  1.3\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 4)\n",
      "sepal_length  4.6\n",
      "sepal_width   3.1\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 5)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.6\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 6)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.9\n",
      "petal_length  1.7\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 7)\n",
      "sepal_length  4.6\n",
      "sepal_width   3.4\n",
      "petal_length  1.4\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 8)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.4\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 9)\n",
      "sepal_length  4.4\n",
      "sepal_width   2.9\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 10)\n",
      "sepal_length  4.9\n",
      "sepal_width   3.1\n",
      "petal_length  1.5\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 11)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.7\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 12)\n",
      "sepal_length  4.8\n",
      "sepal_width   3.4\n",
      "petal_length  1.6\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 13)\n",
      "sepal_length  4.8\n",
      "sepal_width   3.0\n",
      "petal_length  1.4\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 14)\n",
      "sepal_length  4.3\n",
      "sepal_width   3.0\n",
      "petal_length  1.1\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 15)\n",
      "sepal_length  5.8\n",
      "sepal_width   4.0\n",
      "petal_length  1.2\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 16)\n",
      "sepal_length  5.7\n",
      "sepal_width   4.4\n",
      "petal_length  1.5\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 17)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.9\n",
      "petal_length  1.3\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 18)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.5\n",
      "petal_length  1.4\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 19)\n",
      "sepal_length  5.7\n",
      "sepal_width   3.8\n",
      "petal_length  1.7\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 20)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.8\n",
      "petal_length  1.5\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 21)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.4\n",
      "petal_length  1.7\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 22)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.7\n",
      "petal_length  1.5\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 23)\n",
      "sepal_length  4.6\n",
      "sepal_width   3.6\n",
      "petal_length  1.0\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 24)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.3\n",
      "petal_length  1.7\n",
      "petal_width   0.5\n",
      "species       setosa\n",
      "DataFrameRow (row 25)\n",
      "sepal_length  4.8\n",
      "sepal_width   3.4\n",
      "petal_length  1.9\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 26)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.0\n",
      "petal_length  1.6\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 27)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.4\n",
      "petal_length  1.6\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 28)\n",
      "sepal_length  5.2\n",
      "sepal_width   3.5\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 29)\n",
      "sepal_length  5.2\n",
      "sepal_width   3.4\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 30)\n",
      "sepal_length  4.7\n",
      "sepal_width   3.2\n",
      "petal_length  1.6\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 31)\n",
      "sepal_length  4.8\n",
      "sepal_width   3.1\n",
      "petal_length  1.6\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 32)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.4\n",
      "petal_length  1.5\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 33)\n",
      "sepal_length  5.2\n",
      "sepal_width   4.1\n",
      "petal_length  1.5\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 34)\n",
      "sepal_length  5.5\n",
      "sepal_width   4.2\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 35)\n",
      "sepal_length  4.9\n",
      "sepal_width   3.1\n",
      "petal_length  1.5\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 36)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.2\n",
      "petal_length  1.2\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 37)\n",
      "sepal_length  5.5\n",
      "sepal_width   3.5\n",
      "petal_length  1.3\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 38)\n",
      "sepal_length  4.9\n",
      "sepal_width   3.1\n",
      "petal_length  1.5\n",
      "petal_width   0.1\n",
      "species       setosa\n",
      "DataFrameRow (row 39)\n",
      "sepal_length  4.4\n",
      "sepal_width   3.0\n",
      "petal_length  1.3\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 40)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.4\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 41)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.5\n",
      "petal_length  1.3\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 42)\n",
      "sepal_length  4.5\n",
      "sepal_width   2.3\n",
      "petal_length  1.3\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 43)\n",
      "sepal_length  4.4\n",
      "sepal_width   3.2\n",
      "petal_length  1.3\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 44)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.5\n",
      "petal_length  1.6\n",
      "petal_width   0.6\n",
      "species       setosa\n",
      "DataFrameRow (row 45)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.8\n",
      "petal_length  1.9\n",
      "petal_width   0.4\n",
      "species       setosa\n",
      "DataFrameRow (row 46)\n",
      "sepal_length  4.8\n",
      "sepal_width   3.0\n",
      "petal_length  1.4\n",
      "petal_width   0.3\n",
      "species       setosa\n",
      "DataFrameRow (row 47)\n",
      "sepal_length  5.1\n",
      "sepal_width   3.8\n",
      "petal_length  1.6\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 48)\n",
      "sepal_length  4.6\n",
      "sepal_width   3.2\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 49)\n",
      "sepal_length  5.3\n",
      "sepal_width   3.7\n",
      "petal_length  1.5\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 50)\n",
      "sepal_length  5.0\n",
      "sepal_width   3.3\n",
      "petal_length  1.4\n",
      "petal_width   0.2\n",
      "species       setosa\n",
      "DataFrameRow (row 51)\n",
      "sepal_length  7.0\n",
      "sepal_width   3.2\n",
      "petal_length  4.7\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 52)\n",
      "sepal_length  6.4\n",
      "sepal_width   3.2\n",
      "petal_length  4.5\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 53)\n",
      "sepal_length  6.9\n",
      "sepal_width   3.1\n",
      "petal_length  4.9\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 54)\n",
      "sepal_length  5.5\n",
      "sepal_width   2.3\n",
      "petal_length  4.0\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 55)\n",
      "sepal_length  6.5\n",
      "sepal_width   2.8\n",
      "petal_length  4.6\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 56)\n",
      "sepal_length  5.7\n",
      "sepal_width   2.8\n",
      "petal_length  4.5\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 57)\n",
      "sepal_length  6.3\n",
      "sepal_width   3.3\n",
      "petal_length  4.7\n",
      "petal_width   1.6\n",
      "species       versicolor\n",
      "DataFrameRow (row 58)\n",
      "sepal_length  4.9\n",
      "sepal_width   2.4\n",
      "petal_length  3.3\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 59)\n",
      "sepal_length  6.6\n",
      "sepal_width   2.9\n",
      "petal_length  4.6\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 60)\n",
      "sepal_length  5.2\n",
      "sepal_width   2.7\n",
      "petal_length  3.9\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 61)\n",
      "sepal_length  5.0\n",
      "sepal_width   2.0\n",
      "petal_length  3.5\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 62)\n",
      "sepal_length  5.9\n",
      "sepal_width   3.0\n",
      "petal_length  4.2\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 63)\n",
      "sepal_length  6.0\n",
      "sepal_width   2.2\n",
      "petal_length  4.0\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 64)\n",
      "sepal_length  6.1\n",
      "sepal_width   2.9\n",
      "petal_length  4.7\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 65)\n",
      "sepal_length  5.6\n",
      "sepal_width   2.9\n",
      "petal_length  3.6\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 66)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.1\n",
      "petal_length  4.4\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 67)\n",
      "sepal_length  5.6\n",
      "sepal_width   3.0\n",
      "petal_length  4.5\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 68)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.7\n",
      "petal_length  4.1\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 69)\n",
      "sepal_length  6.2\n",
      "sepal_width   2.2\n",
      "petal_length  4.5\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 70)\n",
      "sepal_length  5.6\n",
      "sepal_width   2.5\n",
      "petal_length  3.9\n",
      "petal_width   1.1\n",
      "species       versicolor\n",
      "DataFrameRow (row 71)\n",
      "sepal_length  5.9\n",
      "sepal_width   3.2\n",
      "petal_length  4.8\n",
      "petal_width   1.8\n",
      "species       versicolor\n",
      "DataFrameRow (row 72)\n",
      "sepal_length  6.1\n",
      "sepal_width   2.8\n",
      "petal_length  4.0\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 73)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.5\n",
      "petal_length  4.9\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 74)\n",
      "sepal_length  6.1\n",
      "sepal_width   2.8\n",
      "petal_length  4.7\n",
      "petal_width   1.2\n",
      "species       versicolor\n",
      "DataFrameRow (row 75)\n",
      "sepal_length  6.4\n",
      "sepal_width   2.9\n",
      "petal_length  4.3\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 76)\n",
      "sepal_length  6.6\n",
      "sepal_width   3.0\n",
      "petal_length  4.4\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 77)\n",
      "sepal_length  6.8\n",
      "sepal_width   2.8\n",
      "petal_length  4.8\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 78)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.0\n",
      "petal_length  5.0\n",
      "petal_width   1.7\n",
      "species       versicolor\n",
      "DataFrameRow (row 79)\n",
      "sepal_length  6.0\n",
      "sepal_width   2.9\n",
      "petal_length  4.5\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 80)\n",
      "sepal_length  5.7\n",
      "sepal_width   2.6\n",
      "petal_length  3.5\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 81)\n",
      "sepal_length  5.5\n",
      "sepal_width   2.4\n",
      "petal_length  3.8\n",
      "petal_width   1.1\n",
      "species       versicolor\n",
      "DataFrameRow (row 82)\n",
      "sepal_length  5.5\n",
      "sepal_width   2.4\n",
      "petal_length  3.7\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 83)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.7\n",
      "petal_length  3.9\n",
      "petal_width   1.2\n",
      "species       versicolor\n",
      "DataFrameRow (row 84)\n",
      "sepal_length  6.0\n",
      "sepal_width   2.7\n",
      "petal_length  5.1\n",
      "petal_width   1.6\n",
      "species       versicolor\n",
      "DataFrameRow (row 85)\n",
      "sepal_length  5.4\n",
      "sepal_width   3.0\n",
      "petal_length  4.5\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 86)\n",
      "sepal_length  6.0\n",
      "sepal_width   3.4\n",
      "petal_length  4.5\n",
      "petal_width   1.6\n",
      "species       versicolor\n",
      "DataFrameRow (row 87)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.1\n",
      "petal_length  4.7\n",
      "petal_width   1.5\n",
      "species       versicolor\n",
      "DataFrameRow (row 88)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.3\n",
      "petal_length  4.4\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 89)\n",
      "sepal_length  5.6\n",
      "sepal_width   3.0\n",
      "petal_length  4.1\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 90)\n",
      "sepal_length  5.5\n",
      "sepal_width   2.5\n",
      "petal_length  4.0\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 91)\n",
      "sepal_length  5.5\n",
      "sepal_width   2.6\n",
      "petal_length  4.4\n",
      "petal_width   1.2\n",
      "species       versicolor\n",
      "DataFrameRow (row 92)\n",
      "sepal_length  6.1\n",
      "sepal_width   3.0\n",
      "petal_length  4.6\n",
      "petal_width   1.4\n",
      "species       versicolor\n",
      "DataFrameRow (row 93)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.6\n",
      "petal_length  4.0\n",
      "petal_width   1.2\n",
      "species       versicolor\n",
      "DataFrameRow (row 94)\n",
      "sepal_length  5.0\n",
      "sepal_width   2.3\n",
      "petal_length  3.3\n",
      "petal_width   1.0\n",
      "species       versicolor\n",
      "DataFrameRow (row 95)\n",
      "sepal_length  5.6\n",
      "sepal_width   2.7\n",
      "petal_length  4.2\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 96)\n",
      "sepal_length  5.7\n",
      "sepal_width   3.0\n",
      "petal_length  4.2\n",
      "petal_width   1.2\n",
      "species       versicolor\n",
      "DataFrameRow (row 97)\n",
      "sepal_length  5.7\n",
      "sepal_width   2.9\n",
      "petal_length  4.2\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 98)\n",
      "sepal_length  6.2\n",
      "sepal_width   2.9\n",
      "petal_length  4.3\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 99)\n",
      "sepal_length  5.1\n",
      "sepal_width   2.5\n",
      "petal_length  3.0\n",
      "petal_width   1.1\n",
      "species       versicolor\n",
      "DataFrameRow (row 100)\n",
      "sepal_length  5.7\n",
      "sepal_width   2.8\n",
      "petal_length  4.1\n",
      "petal_width   1.3\n",
      "species       versicolor\n",
      "DataFrameRow (row 101)\n",
      "sepal_length  6.3\n",
      "sepal_width   3.3\n",
      "petal_length  6.0\n",
      "petal_width   2.5\n",
      "species       virginica\n",
      "DataFrameRow (row 102)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.7\n",
      "petal_length  5.1\n",
      "petal_width   1.9\n",
      "species       virginica\n",
      "DataFrameRow (row 103)\n",
      "sepal_length  7.1\n",
      "sepal_width   3.0\n",
      "petal_length  5.9\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 104)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.9\n",
      "petal_length  5.6\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 105)\n",
      "sepal_length  6.5\n",
      "sepal_width   3.0\n",
      "petal_length  5.8\n",
      "petal_width   2.2\n",
      "species       virginica\n",
      "DataFrameRow (row 106)\n",
      "sepal_length  7.6\n",
      "sepal_width   3.0\n",
      "petal_length  6.6\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 107)\n",
      "sepal_length  4.9\n",
      "sepal_width   2.5\n",
      "petal_length  4.5\n",
      "petal_width   1.7\n",
      "species       virginica\n",
      "DataFrameRow (row 108)\n",
      "sepal_length  7.3\n",
      "sepal_width   2.9\n",
      "petal_length  6.3\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 109)\n",
      "sepal_length  6.7\n",
      "sepal_width   2.5\n",
      "petal_length  5.8\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 110)\n",
      "sepal_length  7.2\n",
      "sepal_width   3.6\n",
      "petal_length  6.1\n",
      "petal_width   2.5\n",
      "species       virginica\n",
      "DataFrameRow (row 111)\n",
      "sepal_length  6.5\n",
      "sepal_width   3.2\n",
      "petal_length  5.1\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 112)\n",
      "sepal_length  6.4\n",
      "sepal_width   2.7\n",
      "petal_length  5.3\n",
      "petal_width   1.9\n",
      "species       virginica\n",
      "DataFrameRow (row 113)\n",
      "sepal_length  6.8\n",
      "sepal_width   3.0\n",
      "petal_length  5.5\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 114)\n",
      "sepal_length  5.7\n",
      "sepal_width   2.5\n",
      "petal_length  5.0\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 115)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.8\n",
      "petal_length  5.1\n",
      "petal_width   2.4\n",
      "species       virginica\n",
      "DataFrameRow (row 116)\n",
      "sepal_length  6.4\n",
      "sepal_width   3.2\n",
      "petal_length  5.3\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 117)\n",
      "sepal_length  6.5\n",
      "sepal_width   3.0\n",
      "petal_length  5.5\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 118)\n",
      "sepal_length  7.7\n",
      "sepal_width   3.8\n",
      "petal_length  6.7\n",
      "petal_width   2.2\n",
      "species       virginica\n",
      "DataFrameRow (row 119)\n",
      "sepal_length  7.7\n",
      "sepal_width   2.6\n",
      "petal_length  6.9\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 120)\n",
      "sepal_length  6.0\n",
      "sepal_width   2.2\n",
      "petal_length  5.0\n",
      "petal_width   1.5\n",
      "species       virginica\n",
      "DataFrameRow (row 121)\n",
      "sepal_length  6.9\n",
      "sepal_width   3.2\n",
      "petal_length  5.7\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 122)\n",
      "sepal_length  5.6\n",
      "sepal_width   2.8\n",
      "petal_length  4.9\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 123)\n",
      "sepal_length  7.7\n",
      "sepal_width   2.8\n",
      "petal_length  6.7\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 124)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.7\n",
      "petal_length  4.9\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 125)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.3\n",
      "petal_length  5.7\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 126)\n",
      "sepal_length  7.2\n",
      "sepal_width   3.2\n",
      "petal_length  6.0\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 127)\n",
      "sepal_length  6.2\n",
      "sepal_width   2.8\n",
      "petal_length  4.8\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 128)\n",
      "sepal_length  6.1\n",
      "sepal_width   3.0\n",
      "petal_length  4.9\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 129)\n",
      "sepal_length  6.4\n",
      "sepal_width   2.8\n",
      "petal_length  5.6\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 130)\n",
      "sepal_length  7.2\n",
      "sepal_width   3.0\n",
      "petal_length  5.8\n",
      "petal_width   1.6\n",
      "species       virginica\n",
      "DataFrameRow (row 131)\n",
      "sepal_length  7.4\n",
      "sepal_width   2.8\n",
      "petal_length  6.1\n",
      "petal_width   1.9\n",
      "species       virginica\n",
      "DataFrameRow (row 132)\n",
      "sepal_length  7.9\n",
      "sepal_width   3.8\n",
      "petal_length  6.4\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 133)\n",
      "sepal_length  6.4\n",
      "sepal_width   2.8\n",
      "petal_length  5.6\n",
      "petal_width   2.2\n",
      "species       virginica\n",
      "DataFrameRow (row 134)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.8\n",
      "petal_length  5.1\n",
      "petal_width   1.5\n",
      "species       virginica\n",
      "DataFrameRow (row 135)\n",
      "sepal_length  6.1\n",
      "sepal_width   2.6\n",
      "petal_length  5.6\n",
      "petal_width   1.4\n",
      "species       virginica\n",
      "DataFrameRow (row 136)\n",
      "sepal_length  7.7\n",
      "sepal_width   3.0\n",
      "petal_length  6.1\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 137)\n",
      "sepal_length  6.3\n",
      "sepal_width   3.4\n",
      "petal_length  5.6\n",
      "petal_width   2.4\n",
      "species       virginica\n",
      "DataFrameRow (row 138)\n",
      "sepal_length  6.4\n",
      "sepal_width   3.1\n",
      "petal_length  5.5\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 139)\n",
      "sepal_length  6.0\n",
      "sepal_width   3.0\n",
      "petal_length  4.8\n",
      "petal_width   1.8\n",
      "species       virginica\n",
      "DataFrameRow (row 140)\n",
      "sepal_length  6.9\n",
      "sepal_width   3.1\n",
      "petal_length  5.4\n",
      "petal_width   2.1\n",
      "species       virginica\n",
      "DataFrameRow (row 141)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.1\n",
      "petal_length  5.6\n",
      "petal_width   2.4\n",
      "species       virginica\n",
      "DataFrameRow (row 142)\n",
      "sepal_length  6.9\n",
      "sepal_width   3.1\n",
      "petal_length  5.1\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 143)\n",
      "sepal_length  5.8\n",
      "sepal_width   2.7\n",
      "petal_length  5.1\n",
      "petal_width   1.9\n",
      "species       virginica\n",
      "DataFrameRow (row 144)\n",
      "sepal_length  6.8\n",
      "sepal_width   3.2\n",
      "petal_length  5.9\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 145)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.3\n",
      "petal_length  5.7\n",
      "petal_width   2.5\n",
      "species       virginica\n",
      "DataFrameRow (row 146)\n",
      "sepal_length  6.7\n",
      "sepal_width   3.0\n",
      "petal_length  5.2\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 147)\n",
      "sepal_length  6.3\n",
      "sepal_width   2.5\n",
      "petal_length  5.0\n",
      "petal_width   1.9\n",
      "species       virginica\n",
      "DataFrameRow (row 148)\n",
      "sepal_length  6.5\n",
      "sepal_width   3.0\n",
      "petal_length  5.2\n",
      "petal_width   2.0\n",
      "species       virginica\n",
      "DataFrameRow (row 149)\n",
      "sepal_length  6.2\n",
      "sepal_width   3.4\n",
      "petal_length  5.4\n",
      "petal_width   2.3\n",
      "species       virginica\n",
      "DataFrameRow (row 150)\n",
      "sepal_length  5.9\n",
      "sepal_width   3.0\n",
      "petal_length  5.1\n",
      "petal_width   1.8\n",
      "species       virginica\n"
     ]
    }
   ],
   "source": [
    "for i in eachrow(df)\n",
    "    print(i)\n",
    "end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(:sepal_length, [5.1, 4.9, 4.7, 4.6, 5.0, 5.4, 4.6, 5.0, 4.4, 4.9, 5.4, 4.8, 4.8, 4.3, 5.8, 5.7, 5.4, 5.1, 5.7, 5.1, 5.4, 5.1, 4.6, 5.1, 4.8, 5.0, 5.0, 5.2, 5.2, 4.7, 4.8, 5.4, 5.2, 5.5, 4.9, 5.0, 5.5, 4.9, 4.4, 5.1, 5.0, 4.5, 4.4, 5.0, 5.1, 4.8, 5.1, 4.6, 5.3, 5.0, 7.0, 6.4, 6.9, 5.5, 6.5, 5.7, 6.3, 4.9, 6.6, 5.2, 5.0, 5.9, 6.0, 6.1, 5.6, 6.7, 5.6, 5.8, 6.2, 5.6, 5.9, 6.1, 6.3, 6.1, 6.4, 6.6, 6.8, 6.7, 6.0, 5.7, 5.5, 5.5, 5.8, 6.0, 5.4, 6.0, 6.7, 6.3, 5.6, 5.5, 5.5, 6.1, 5.8, 5.0, 5.6, 5.7, 5.7, 6.2, 5.1, 5.7, 6.3, 5.8, 7.1, 6.3, 6.5, 7.6, 4.9, 7.3, 6.7, 7.2, 6.5, 6.4, 6.8, 5.7, 5.8, 6.4, 6.5, 7.7, 7.7, 6.0, 6.9, 5.6, 7.7, 6.3, 6.7, 7.2, 6.2, 6.1, 6.4, 7.2, 7.4, 7.9, 6.4, 6.3, 6.1, 7.7, 6.3, 6.4, 6.0, 6.9, 6.7, 6.9, 5.8, 6.8, 6.7, 6.7, 6.3, 6.5, 6.2, 5.9])\n",
      "(:sepal_width, [3.5, 3.0, 3.2, 3.1, 3.6, 3.9, 3.4, 3.4, 2.9, 3.1, 3.7, 3.4, 3.0, 3.0, 4.0, 4.4, 3.9, 3.5, 3.8, 3.8, 3.4, 3.7, 3.6, 3.3, 3.4, 3.0, 3.4, 3.5, 3.4, 3.2, 3.1, 3.4, 4.1, 4.2, 3.1, 3.2, 3.5, 3.1, 3.0, 3.4, 3.5, 2.3, 3.2, 3.5, 3.8, 3.0, 3.8, 3.2, 3.7, 3.3, 3.2, 3.2, 3.1, 2.3, 2.8, 2.8, 3.3, 2.4, 2.9, 2.7, 2.0, 3.0, 2.2, 2.9, 2.9, 3.1, 3.0, 2.7, 2.2, 2.5, 3.2, 2.8, 2.5, 2.8, 2.9, 3.0, 2.8, 3.0, 2.9, 2.6, 2.4, 2.4, 2.7, 2.7, 3.0, 3.4, 3.1, 2.3, 3.0, 2.5, 2.6, 3.0, 2.6, 2.3, 2.7, 3.0, 2.9, 2.9, 2.5, 2.8, 3.3, 2.7, 3.0, 2.9, 3.0, 3.0, 2.5, 2.9, 2.5, 3.6, 3.2, 2.7, 3.0, 2.5, 2.8, 3.2, 3.0, 3.8, 2.6, 2.2, 3.2, 2.8, 2.8, 2.7, 3.3, 3.2, 2.8, 3.0, 2.8, 3.0, 2.8, 3.8, 2.8, 2.8, 2.6, 3.0, 3.4, 3.1, 3.0, 3.1, 3.1, 3.1, 2.7, 3.2, 3.3, 3.0, 2.5, 3.0, 3.4, 3.0])\n",
      "(:petal_length, [1.4, 1.4, 1.3, 1.5, 1.4, 1.7, 1.4, 1.5, 1.4, 1.5, 1.5, 1.6, 1.4, 1.1, 1.2, 1.5, 1.3, 1.4, 1.7, 1.5, 1.7, 1.5, 1.0, 1.7, 1.9, 1.6, 1.6, 1.5, 1.4, 1.6, 1.6, 1.5, 1.5, 1.4, 1.5, 1.2, 1.3, 1.5, 1.3, 1.5, 1.3, 1.3, 1.3, 1.6, 1.9, 1.4, 1.6, 1.4, 1.5, 1.4, 4.7, 4.5, 4.9, 4.0, 4.6, 4.5, 4.7, 3.3, 4.6, 3.9, 3.5, 4.2, 4.0, 4.7, 3.6, 4.4, 4.5, 4.1, 4.5, 3.9, 4.8, 4.0, 4.9, 4.7, 4.3, 4.4, 4.8, 5.0, 4.5, 3.5, 3.8, 3.7, 3.9, 5.1, 4.5, 4.5, 4.7, 4.4, 4.1, 4.0, 4.4, 4.6, 4.0, 3.3, 4.2, 4.2, 4.2, 4.3, 3.0, 4.1, 6.0, 5.1, 5.9, 5.6, 5.8, 6.6, 4.5, 6.3, 5.8, 6.1, 5.1, 5.3, 5.5, 5.0, 5.1, 5.3, 5.5, 6.7, 6.9, 5.0, 5.7, 4.9, 6.7, 4.9, 5.7, 6.0, 4.8, 4.9, 5.6, 5.8, 6.1, 6.4, 5.6, 5.1, 5.6, 6.1, 5.6, 5.5, 4.8, 5.4, 5.6, 5.1, 5.1, 5.9, 5.7, 5.2, 5.0, 5.2, 5.4, 5.1])\n",
      "(:petal_width, [0.2, 0.2, 0.2, 0.2, 0.2, 0.4, 0.3, 0.2, 0.2, 0.1, 0.2, 0.2, 0.1, 0.1, 0.2, 0.4, 0.4, 0.3, 0.3, 0.3, 0.2, 0.4, 0.2, 0.5, 0.2, 0.2, 0.4, 0.2, 0.2, 0.2, 0.2, 0.4, 0.1, 0.2, 0.1, 0.2, 0.2, 0.1, 0.2, 0.2, 0.3, 0.3, 0.2, 0.6, 0.4, 0.3, 0.2, 0.2, 0.2, 0.2, 1.4, 1.5, 1.5, 1.3, 1.5, 1.3, 1.6, 1.0, 1.3, 1.4, 1.0, 1.5, 1.0, 1.4, 1.3, 1.4, 1.5, 1.0, 1.5, 1.1, 1.8, 1.3, 1.5, 1.2, 1.3, 1.4, 1.4, 1.7, 1.5, 1.0, 1.1, 1.0, 1.2, 1.6, 1.5, 1.6, 1.5, 1.3, 1.3, 1.3, 1.2, 1.4, 1.2, 1.0, 1.3, 1.2, 1.3, 1.3, 1.1, 1.3, 2.5, 1.9, 2.1, 1.8, 2.2, 2.1, 1.7, 1.8, 1.8, 2.5, 2.0, 1.9, 2.1, 2.0, 2.4, 2.3, 1.8, 2.2, 2.3, 1.5, 2.3, 2.0, 2.0, 1.8, 2.1, 1.8, 1.8, 1.8, 2.1, 1.6, 1.9, 2.0, 2.2, 1.5, 1.4, 2.3, 2.4, 1.8, 1.8, 2.1, 2.4, 2.3, 1.9, 2.3, 2.5, 2.3, 1.9, 2.0, 2.3, 1.8])\n",
      "(:species, String[\"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"setosa\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"versicolor\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\", \"virginica\"])\n"
     ]
    }
   ],
   "source": [
    "for i in eachcol(df)\n",
    "    println(i)\n",
    "end"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Split Apply Combine\n",
    "\n",
    "    Splitting a dataset into groups, -- Groupby()\n",
    "    Applying functions to each group -- by()\n",
    "\n",
    "    Combining the results\n",
    "\n",
    "    Pkg.add(\"DataFrames\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<table class=\"data-frame\"><thead><tr><th></th><th>Symbol</th><th>Name</th><th>Sector</th><th>Price</th><th>Dividend_Yield</th><th>Price_Earnings</th><th>Earnings_Share</th><th>Book_Value</th><th>x52_week_low</th><th>x52_week_high</th><th>Market_Cap</th><th>EBITDA</th><th>Price_Sales</th><th>Price_Book</th><th>SEC_Filings</th></tr></thead><tbody><tr><th>1</th><td>MMM</td><td>3M Company</td><td>Industrials</td><td>189.09</td><td>2.48</td><td>23.17</td><td>8.16</td><td>17.26</td><td>158.28</td><td>190.54</td><td>112.74</td><td>8.7</td><td>3.74</td><td>10.95</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=MMM</td></tr><tr><th>2</th><td>ABT</td><td>Abbott Laboratories</td><td>Health Care</td><td>45.0</td><td>2.34</td><td>48.03</td><td>0.94</td><td>13.94</td><td>36.76</td><td>45.83</td><td>77.76</td><td>4.59</td><td>3.74</td><td>3.24</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ABT</td></tr><tr><th>3</th><td>ABBV</td><td>AbbVie</td><td>Health Care</td><td>63.69</td><td>4.04</td><td>17.55</td><td>3.63</td><td>2.91</td><td>54.41</td><td>68.12</td><td>101.52</td><td>10.95</td><td>3.95</td><td>21.83</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ABBV</td></tr><tr><th>4</th><td>ACN</td><td>Accenture plc</td><td>Information Technology</td><td>124.14</td><td>1.96</td><td>18.37</td><td>6.76</td><td>11.95</td><td>102.1</td><td>125.72</td><td>77.29</td><td>5.66</td><td>2.3</td><td>10.32</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ACN</td></tr><tr><th>5</th><td>ATVI</td><td>Activision Blizzard</td><td>Information Technology</td><td>48.06</td><td>0.64</td><td>37.55</td><td>1.28</td><td>12.23</td><td>30.37</td><td>48.36</td><td>36.13</td><td>2.14</td><td>5.44</td><td>3.91</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ATVI</td></tr><tr><th>6</th><td>AYI</td><td>Acuity Brands Inc</td><td>Industrials</td><td>205.41</td><td>0.25</td><td>29.68</td><td>6.92</td><td>39.5</td><td>193.06</td><td>280.89</td><td>9.0</td><td>0.5862</td><td>2.64</td><td>5.19</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AYI</td></tr><tr><th>7</th><td>ADBE</td><td>Adobe Systems Inc</td><td>Information Technology</td><td>119.98</td><td>0.0</td><td>51.72</td><td>2.32</td><td>15.02</td><td>83.25</td><td>120.69</td><td>59.28</td><td>1.82</td><td>10.14</td><td>8.0</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ADBE</td></tr><tr><th>8</th><td>AAP</td><td>Advance Auto Parts</td><td>Consumer Discretionary</td><td>151.99</td><td>0.15</td><td>24.51</td><td>6.2</td><td>39.66</td><td>132.98</td><td>177.83</td><td>11.18</td><td>1.12</td><td>1.19</td><td>3.89</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AAP</td></tr><tr><th>9</th><td>AES</td><td>AES Corp</td><td>Utilities</td><td>11.33</td><td>4.16</td><td>NA</td><td>-1.71</td><td>4.24</td><td>10.27</td><td>13.32</td><td>7.47</td><td>3.42</td><td>0.56</td><td>2.72</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AES</td></tr><tr><th>10</th><td>AET</td><td>Aetna Inc</td><td>Health Care</td><td>130.59</td><td>1.53</td><td>20.37</td><td>6.41</td><td>50.84</td><td>104.59</td><td>136.5</td><td>45.93</td><td>6.2</td><td>0.73</td><td>2.58</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AET</td></tr><tr><th>11</th><td>AMG</td><td>Affiliated Managers Group Inc</td><td>Financials</td><td>166.56</td><td>0.47</td><td>19.44</td><td>8.57</td><td>63.84</td><td>130.48</td><td>179.85</td><td>9.44</td><td>0.835</td><td>4.32</td><td>2.62</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AMG</td></tr><tr><th>12</th><td>AFL</td><td>AFLAC Inc</td><td>Financials</td><td>71.95</td><td>2.38</td><td>11.21</td><td>6.42</td><td>50.47</td><td>59.66</td><td>74.5</td><td>28.88</td><td>4.78</td><td>1.27</td><td>1.43</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AFL</td></tr><tr><th>13</th><td>A</td><td>Agilent Technologies Inc</td><td>Health Care</td><td>51.21</td><td>1.02</td><td>32.85</td><td>1.56</td><td>13.35</td><td>37.62</td><td>52.26</td><td>16.49</td><td>0.942</td><td>3.89</td><td>3.84</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=A</td></tr><tr><th>14</th><td>APD</td><td>Air Products &amp; Chemicals Inc</td><td>Materials</td><td>139.64</td><td>2.72</td><td>53.77</td><td>2.6</td><td>32.91</td><td>123.05</td><td>150.45</td><td>30.38</td><td>3.13</td><td>3.18</td><td>4.23</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=APD</td></tr><tr><th>15</th><td>AKAM</td><td>Akamai Technologies Inc</td><td>Information Technology</td><td>63.3</td><td>NA</td><td>35.36</td><td>1.79</td><td>18.61</td><td>47.8</td><td>71.64</td><td>10.96</td><td>0.70798</td><td>4.67</td><td>3.39</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AKAM</td></tr><tr><th>16</th><td>ALK</td><td>Alaska Air Group Inc</td><td>Industrials</td><td>95.12</td><td>1.21</td><td>14.54</td><td>6.54</td><td>23.77</td><td>54.51</td><td>101.43</td><td>11.74</td><td>1.82</td><td>2.01</td><td>4.07</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ALK</td></tr><tr><th>17</th><td>ALB</td><td>Albemarle Corp</td><td>Materials</td><td>103.79</td><td>1.22</td><td>18.26</td><td>5.68</td><td>33.73</td><td>58.6</td><td>105.2</td><td>11.68</td><td>0.70201</td><td>4.29</td><td>3.03</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ALB</td></tr><tr><th>18</th><td>ALXN</td><td>Alexion Pharmaceuticals</td><td>Health Care</td><td>129.18</td><td>NA</td><td>73.4</td><td>1.76</td><td>38.81</td><td>109.12</td><td>162.0</td><td>29.02</td><td>1.17</td><td>9.71</td><td>3.44</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ALXN</td></tr><tr><th>19</th><td>ALLE</td><td>Allegion</td><td>Industrials</td><td>72.86</td><td>0.87</td><td>30.87</td><td>2.36</td><td>1.19</td><td>61.47</td><td>75.0</td><td>6.96</td><td>0.4789</td><td>3.12</td><td>61.57</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ALLE</td></tr><tr><th>20</th><td>AGN</td><td>Allergan, Plc</td><td>Health Care</td><td>239.6</td><td>1.14</td><td>6.28</td><td>38.18</td><td>212.79</td><td>184.5</td><td>299.11</td><td>80.32</td><td>6.1</td><td>5.58</td><td>1.14</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AGN</td></tr><tr><th>21</th><td>ADS</td><td>Alliance Data Systems</td><td>Information Technology</td><td>245.05</td><td>0.85</td><td>33.39</td><td>7.34</td><td>28.89</td><td>185.02</td><td>249.22</td><td>13.7</td><td>1.46</td><td>1.92</td><td>8.5</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ADS</td></tr><tr><th>22</th><td>LNT</td><td>Alliant Energy Corp</td><td>Utilities</td><td>39.28</td><td>3.22</td><td>24.01</td><td>1.64</td><td>16.96</td><td>34.04</td><td>40.99</td><td>8.94</td><td>1.03</td><td>2.69</td><td>2.31</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=LNT</td></tr><tr><th>23</th><td>ALL</td><td>Allstate Corp</td><td>Financials</td><td>81.46</td><td>1.66</td><td>17.44</td><td>4.67</td><td>51.44</td><td>63.73</td><td>83.05</td><td>29.74</td><td>3.46</td><td>0.81</td><td>1.58</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=ALL</td></tr><tr><th>24</th><td>GOOGL</td><td>Alphabet Inc Class A</td><td>Information Technology</td><td>851.15</td><td>NA</td><td>30.53</td><td>27.88</td><td>201.12</td><td>672.66</td><td>867.0</td><td>588.5</td><td>29.86</td><td>6.49</td><td>4.21</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=GOOGL</td></tr><tr><th>25</th><td>GOOG</td><td>Alphabet Inc Class C</td><td>Information Technology</td><td>831.91</td><td>NA</td><td>29.84</td><td>27.88</td><td>201.12</td><td>663.28</td><td>841.95</td><td>575.2</td><td>29.86</td><td>6.34</td><td>4.12</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=GOOG</td></tr><tr><th>26</th><td>MO</td><td>Altria Group Inc</td><td>Consumer Staples</td><td>76.1</td><td>3.23</td><td>10.45</td><td>7.28</td><td>6.58</td><td>59.48</td><td>76.3</td><td>147.64</td><td>9.5</td><td>7.58</td><td>11.48</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=MO</td></tr><tr><th>27</th><td>AMZN</td><td>Amazon.com Inc</td><td>Consumer Discretionary</td><td>846.02</td><td>NA</td><td>172.66</td><td>4.9</td><td>40.43</td><td>538.58</td><td>860.86</td><td>403.7</td><td>11.67</td><td>2.97</td><td>20.94</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AMZN</td></tr><tr><th>28</th><td>AEE</td><td>Ameren Corp</td><td>Utilities</td><td>54.82</td><td>3.21</td><td>20.46</td><td>2.68</td><td>29.28</td><td>46.29</td><td>55.51</td><td>13.3</td><td>2.3</td><td>2.27</td><td>1.87</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AEE</td></tr><tr><th>29</th><td>AAL</td><td>American Airlines Group</td><td>Industrials</td><td>44.84</td><td>0.85</td><td>9.32</td><td>4.81</td><td>7.46</td><td>24.85</td><td>50.64</td><td>22.61</td><td>7.83</td><td>0.57</td><td>6.07</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AAL</td></tr><tr><th>30</th><td>AEP</td><td>American Electric Power</td><td>Utilities</td><td>66.24</td><td>3.55</td><td>53.29</td><td>1.24</td><td>35.38</td><td>57.89</td><td>71.32</td><td>32.57</td><td>5.29</td><td>1.99</td><td>1.88</td><td>http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&amp;CIK=AEP</td></tr><tr><th>&vellip;</th><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td><td>&vellip;</td></tr></tbody></table>"
      ],
      "text/plain": [
       "505×15 DataFrames.DataFrame\n",
       "│ Row │ Symbol │ Name                            │ Sector                   │\n",
       "├─────┼────────┼─────────────────────────────────┼──────────────────────────┤\n",
       "│ 1   │ \"MMM\"  │ \"3M Company\"                    │ \"Industrials\"            │\n",
       "│ 2   │ \"ABT\"  │ \"Abbott Laboratories\"           │ \"Health Care\"            │\n",
       "│ 3   │ \"ABBV\" │ \"AbbVie\"                        │ \"Health Care\"            │\n",
       "│ 4   │ \"ACN\"  │ \"Accenture plc\"                 │ \"Information Technology\" │\n",
       "│ 5   │ \"ATVI\" │ \"Activision Blizzard\"           │ \"Information Technology\" │\n",
       "│ 6   │ \"AYI\"  │ \"Acuity Brands Inc\"             │ \"Industrials\"            │\n",
       "│ 7   │ \"ADBE\" │ \"Adobe Systems Inc\"             │ \"Information Technology\" │\n",
       "│ 8   │ \"AAP\"  │ \"Advance Auto Parts\"            │ \"Consumer Discretionary\" │\n",
       "│ 9   │ \"AES\"  │ \"AES Corp\"                      │ \"Utilities\"              │\n",
       "│ 10  │ \"AET\"  │ \"Aetna Inc\"                     │ \"Health Care\"            │\n",
       "│ 11  │ \"AMG\"  │ \"Affiliated Managers Group Inc\" │ \"Financials\"             │\n",
       "⋮\n",
       "│ 494 │ \"WYN\"  │ \"Wyndham Worldwide\"             │ \"Consumer Discretionary\" │\n",
       "│ 495 │ \"WYNN\" │ \"Wynn Resorts Ltd\"              │ \"Consumer Discretionary\" │\n",
       "│ 496 │ \"XEL\"  │ \"Xcel Energy Inc\"               │ \"Utilities\"              │\n",
       "│ 497 │ \"XRX\"  │ \"Xerox Corp.\"                   │ \"Information Technology\" │\n",
       "│ 498 │ \"XLNX\" │ \"Xilinx Inc\"                    │ \"Information Technology\" │\n",
       "│ 499 │ \"XL\"   │ \"XL Capital\"                    │ \"Financials\"             │\n",
       "│ 500 │ \"XYL\"  │ \"Xylem Inc.\"                    │ \"Industrials\"            │\n",
       "│ 501 │ \"YHOO\" │ \"Yahoo Inc.\"                    │ \"Information Technology\" │\n",
       "│ 502 │ \"YUM\"  │ \"Yum! Brands Inc\"               │ \"Consumer Discretionary\" │\n",
       "│ 503 │ \"ZBH\"  │ \"Zimmer Biomet Holdings\"        │ \"Health Care\"            │\n",
       "│ 504 │ \"ZION\" │ \"Zions Bancorp\"                 │ \"Financials\"             │\n",
       "│ 505 │ \"ZTS\"  │ \"Zoetis\"                        │ \"Health Care\"            │\n",
       "\n",
       "│ Row │ Price  │ Dividend_Yield │ Price_Earnings │ Earnings_Share │ Book_Value │\n",
       "├─────┼────────┼────────────────┼────────────────┼────────────────┼────────────┤\n",
       "│ 1   │ 189.09 │ 2.48           │ 23.17          │ 8.16           │ 17.26      │\n",
       "│ 2   │ 45.0   │ 2.34           │ 48.03          │ 0.94           │ 13.94      │\n",
       "│ 3   │ 63.69  │ 4.04           │ 17.55          │ 3.63           │ 2.91       │\n",
       "│ 4   │ 124.14 │ 1.96           │ 18.37          │ 6.76           │ 11.95      │\n",
       "│ 5   │ 48.06  │ 0.64           │ 37.55          │ 1.28           │ 12.23      │\n",
       "│ 6   │ 205.41 │ 0.25           │ 29.68          │ 6.92           │ 39.5       │\n",
       "│ 7   │ 119.98 │ 0.0            │ 51.72          │ 2.32           │ 15.02      │\n",
       "│ 8   │ 151.99 │ 0.15           │ 24.51          │ 6.2            │ 39.66      │\n",
       "│ 9   │ 11.33  │ 4.16           │ NA             │ -1.71          │ 4.24       │\n",
       "│ 10  │ 130.59 │ 1.53           │ 20.37          │ 6.41           │ 50.84      │\n",
       "│ 11  │ 166.56 │ 0.47           │ 19.44          │ 8.57           │ 63.84      │\n",
       "⋮\n",
       "│ 494 │ 82.19  │ 2.52           │ 14.86          │ 5.53           │ 6.76       │\n",
       "│ 495 │ 99.46  │ 1.98           │ 41.79          │ 2.38           │ 1.55       │\n",
       "│ 496 │ 43.82  │ 3.29           │ 19.85          │ 2.21           │ 21.73      │\n",
       "│ 497 │ 7.36   │ 3.4            │ NA             │ -0.49          │ 4.74       │\n",
       "│ 498 │ 58.75  │ 2.25           │ 25.77          │ 2.28           │ 9.97       │\n",
       "│ 499 │ 40.13  │ 2.18           │ 25.72          │ 1.56           │ 40.99      │\n",
       "│ 500 │ 48.78  │ 1.48           │ 33.64          │ 1.45           │ 12.21      │\n",
       "│ 501 │ 45.73  │ NA             │ NA             │ -0.23          │ 32.5       │\n",
       "│ 502 │ 64.02  │ 2.66           │ 15.83          │ 4.04           │ -15.93     │\n",
       "│ 503 │ 117.07 │ 0.81           │ 77.53          │ 1.51           │ 48.2       │\n",
       "│ 504 │ 45.28  │ 0.71           │ 22.75          │ 1.99           │ 34.1       │\n",
       "│ 505 │ 53.07  │ 0.79           │ 32.16          │ 1.65           │ 3.02       │\n",
       "\n",
       "│ Row │ x52_week_low │ x52_week_high │ Market_Cap │ EBITDA  │ Price_Sales │\n",
       "├─────┼──────────────┼───────────────┼────────────┼─────────┼─────────────┤\n",
       "│ 1   │ 158.28       │ 190.54        │ 112.74     │ 8.7     │ 3.74        │\n",
       "│ 2   │ 36.76        │ 45.83         │ 77.76      │ 4.59    │ 3.74        │\n",
       "│ 3   │ 54.41        │ 68.12         │ 101.52     │ 10.95   │ 3.95        │\n",
       "│ 4   │ 102.1        │ 125.72        │ 77.29      │ 5.66    │ 2.3         │\n",
       "│ 5   │ 30.37        │ 48.36         │ 36.13      │ 2.14    │ 5.44        │\n",
       "│ 6   │ 193.06       │ 280.89        │ 9.0        │ 0.5862  │ 2.64        │\n",
       "│ 7   │ 83.25        │ 120.69        │ 59.28      │ 1.82    │ 10.14       │\n",
       "│ 8   │ 132.98       │ 177.83        │ 11.18      │ 1.12    │ 1.19        │\n",
       "│ 9   │ 10.27        │ 13.32         │ 7.47       │ 3.42    │ 0.56        │\n",
       "│ 10  │ 104.59       │ 136.5         │ 45.93      │ 6.2     │ 0.73        │\n",
       "│ 11  │ 130.48       │ 179.85        │ 9.44       │ 0.835   │ 4.32        │\n",
       "⋮\n",
       "│ 494 │ 62.6         │ 86.72         │ 8.63       │ 1.31    │ 1.68        │\n",
       "│ 495 │ 79.77        │ 109.5         │ 10.11      │ 0.95059 │ 2.28        │\n",
       "│ 496 │ 38.0         │ 45.42         │ 22.23      │ 3.65    │ 1.99        │\n",
       "│ 497 │ 6.46         │ 11.39         │ 7.48       │ 1.52    │ 0.7         │\n",
       "│ 498 │ 41.53        │ 62.24         │ 14.62      │ 0.76713 │ 6.33        │\n",
       "│ 499 │ 30.33        │ 41.39         │ 10.63      │ 1.1     │ 1.0         │\n",
       "│ 500 │ 37.58        │ 54.99         │ 8.75       │ 0.615   │ 2.31        │\n",
       "│ 501 │ 32.09        │ 46.72         │ 43.74      │ 0.2268  │ 8.45        │\n",
       "│ 502 │ 59.57        │ 91.99         │ 22.65      │ 1.96    │ 3.59        │\n",
       "│ 503 │ 95.63        │ 133.21        │ 23.54      │ 2.8     │ 3.07        │\n",
       "│ 504 │ 23.02        │ 48.33         │ 9.17       │ 0.0     │ 4.01        │\n",
       "│ 505 │ 39.35        │ 56.5          │ 26.11      │ 1.7     │ 5.34        │\n",
       "\n",
       "│ Row │ Price_Book │\n",
       "├─────┼────────────┤\n",
       "│ 1   │ 10.95      │\n",
       "│ 2   │ 3.24       │\n",
       "│ 3   │ 21.83      │\n",
       "│ 4   │ 10.32      │\n",
       "│ 5   │ 3.91       │\n",
       "│ 6   │ 5.19       │\n",
       "│ 7   │ 8.0        │\n",
       "│ 8   │ 3.89       │\n",
       "│ 9   │ 2.72       │\n",
       "│ 10  │ 2.58       │\n",
       "│ 11  │ 2.62       │\n",
       "⋮\n",
       "│ 494 │ 12.17      │\n",
       "│ 495 │ 64.59      │\n",
       "│ 496 │ 2.01       │\n",
       "│ 497 │ 1.57       │\n",
       "│ 498 │ 5.9        │\n",
       "│ 499 │ 0.97       │\n",
       "│ 500 │ 3.97       │\n",
       "│ 501 │ 1.4        │\n",
       "│ 502 │ NA         │\n",
       "│ 503 │ 2.43       │\n",
       "│ 504 │ 1.33       │\n",
       "│ 505 │ 17.59      │\n",
       "\n",
       "│ Row │ SEC_Filings                                                          │\n",
       "├─────┼──────────────────────────────────────────────────────────────────────┤\n",
       "│ 1   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=MMM\"  │\n",
       "│ 2   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ABT\"  │\n",
       "│ 3   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ABBV\" │\n",
       "│ 4   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ACN\"  │\n",
       "│ 5   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ATVI\" │\n",
       "│ 6   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AYI\"  │\n",
       "│ 7   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ADBE\" │\n",
       "│ 8   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AAP\"  │\n",
       "│ 9   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AES\"  │\n",
       "│ 10  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AET\"  │\n",
       "│ 11  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AMG\"  │\n",
       "⋮\n",
       "│ 494 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WYN\"  │\n",
       "│ 495 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WYNN\" │\n",
       "│ 496 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XEL\"  │\n",
       "│ 497 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XRX\"  │\n",
       "│ 498 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XLNX\" │\n",
       "│ 499 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XL\"   │\n",
       "│ 500 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XYL\"  │\n",
       "│ 501 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=YHOO\" │\n",
       "│ 502 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=YUM\"  │\n",
       "│ 503 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ZBH\"  │\n",
       "│ 504 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ZION\" │\n",
       "│ 505 │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ZTS\"  │"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Load Data set\n",
    "# Dataset is from \"https://datahub.io/core/s-and-p-500-companies#resource-constituents\"\n",
    "df = readtable(\"data/constituents-financials_csv.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "505×15 DataFrames.DataFrame\n",
      "│ Col # │ Name           │ Eltype     │ Missing │\n",
      "├───────┼────────────────┼────────────┼─────────┤\n",
      "│ 1     │ Symbol         │ UTF8String │ 0       │\n",
      "│ 2     │ Name           │ UTF8String │ 0       │\n",
      "│ 3     │ Sector         │ UTF8String │ 0       │\n",
      "│ 4     │ Price          │ Float64    │ 2       │\n",
      "│ 5     │ Dividend_Yield │ Float64    │ 66      │\n",
      "│ 6     │ Price_Earnings │ Float64    │ 56      │\n",
      "│ 7     │ Earnings_Share │ Float64    │ 1       │\n",
      "│ 8     │ Book_Value     │ Float64    │ 2       │\n",
      "│ 9     │ x52_week_low   │ Float64    │ 2       │\n",
      "│ 10    │ x52_week_high  │ Float64    │ 2       │\n",
      "│ 11    │ Market_Cap     │ Float64    │ 2       │\n",
      "│ 12    │ EBITDA         │ Float64    │ 2       │\n",
      "│ 13    │ Price_Sales    │ Float64    │ 2       │\n",
      "│ 14    │ Price_Book     │ Float64    │ 21      │\n",
      "│ 15    │ SEC_Filings    │ UTF8String │ 0       │"
     ]
    }
   ],
   "source": [
    "showcols(df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "    groupby()\n",
    "    syntax=> groupby(DataFrame,[:column])\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "DataFrames.GroupedDataFrame  11 groups with keys: [:Sector]\n",
       "First Group:\n",
       "86×15 DataFrames.SubDataFrame{Array{Int64,1}}\n",
       "│ Row │ Symbol │ Name                                   │\n",
       "├─────┼────────┼────────────────────────────────────────┤\n",
       "│ 1   │ \"AAP\"  │ \"Advance Auto Parts\"                   │\n",
       "│ 2   │ \"AMZN\" │ \"Amazon.com Inc\"                       │\n",
       "│ 3   │ \"AN\"   │ \"AutoNation Inc\"                       │\n",
       "│ 4   │ \"AZO\"  │ \"AutoZone Inc\"                         │\n",
       "│ 5   │ \"BBBY\" │ \"Bed Bath & Beyond\"                    │\n",
       "│ 6   │ \"BBY\"  │ \"Best Buy Co. Inc.\"                    │\n",
       "│ 7   │ \"BWA\"  │ \"BorgWarner\"                           │\n",
       "│ 8   │ \"KMX\"  │ \"Carmax Inc\"                           │\n",
       "│ 9   │ \"CCL\"  │ \"Carnival Corp.\"                       │\n",
       "│ 10  │ \"CBS\"  │ \"CBS Corp.\"                            │\n",
       "│ 11  │ \"CHTR\" │ \"Charter Communications\"               │\n",
       "⋮\n",
       "│ 75  │ \"FOXA\" │ \"Twenty-First Century Fox Class A\"     │\n",
       "│ 76  │ \"FOX\"  │ \"Twenty-First Century Fox Class B\"     │\n",
       "│ 77  │ \"ULTA\" │ \"Ulta Salon Cosmetics & Fragrance Inc\" │\n",
       "│ 78  │ \"UA\"   │ \"Under Armour\"                         │\n",
       "│ 79  │ \"UAA\"  │ \"Under Armour\"                         │\n",
       "│ 80  │ \"URBN\" │ \"Urban Outfitters\"                     │\n",
       "│ 81  │ \"VFC\"  │ \"V.F. Corp.\"                           │\n",
       "│ 82  │ \"VIAB\" │ \"Viacom Inc.\"                          │\n",
       "│ 83  │ \"WHR\"  │ \"Whirlpool Corp.\"                      │\n",
       "│ 84  │ \"WYN\"  │ \"Wyndham Worldwide\"                    │\n",
       "│ 85  │ \"WYNN\" │ \"Wynn Resorts Ltd\"                     │\n",
       "│ 86  │ \"YUM\"  │ \"Yum! Brands Inc\"                      │\n",
       "\n",
       "│ Row │ Sector                   │ Price  │ Dividend_Yield │ Price_Earnings │\n",
       "├─────┼──────────────────────────┼────────┼────────────────┼────────────────┤\n",
       "│ 1   │ \"Consumer Discretionary\" │ 151.99 │ 0.15           │ 24.51          │\n",
       "│ 2   │ \"Consumer Discretionary\" │ 846.02 │ NA             │ 172.66         │\n",
       "│ 3   │ \"Consumer Discretionary\" │ 45.26  │ NA             │ 10.91          │\n",
       "│ 4   │ \"Consumer Discretionary\" │ 712.72 │ NA             │ 16.72          │\n",
       "│ 5   │ \"Consumer Discretionary\" │ 39.01  │ 1.24           │ 8.28           │\n",
       "│ 6   │ \"Consumer Discretionary\" │ 44.55  │ 2.64           │ 11.71          │\n",
       "│ 7   │ \"Consumer Discretionary\" │ 41.69  │ 1.3            │ 75.8           │\n",
       "│ 8   │ \"Consumer Discretionary\" │ 63.81  │ NA             │ 20.22          │\n",
       "│ 9   │ \"Consumer Discretionary\" │ 55.53  │ 2.51           │ 14.93          │\n",
       "│ 10  │ \"Consumer Discretionary\" │ 67.94  │ 1.06           │ 24.18          │\n",
       "│ 11  │ \"Consumer Discretionary\" │ 323.24 │ NA             │ 20.27          │\n",
       "⋮\n",
       "│ 75  │ \"Consumer Discretionary\" │ 30.52  │ 1.18           │ 18.6           │\n",
       "│ 76  │ \"Consumer Discretionary\" │ 30.11  │ 1.2            │ 18.35          │\n",
       "│ 77  │ \"Consumer Discretionary\" │ 269.92 │ 0.0            │ 45.24          │\n",
       "│ 78  │ \"Consumer Discretionary\" │ 18.11  │ NA             │ 40.7           │\n",
       "│ 79  │ \"Consumer Discretionary\" │ 19.69  │ NA             │ 44.25          │\n",
       "│ 80  │ \"Consumer Discretionary\" │ 25.41  │ NA             │ 13.21          │\n",
       "│ 81  │ \"Consumer Discretionary\" │ 52.62  │ 3.19           │ 20.66          │\n",
       "│ 82  │ \"Consumer Discretionary\" │ 42.93  │ 1.89           │ 12.32          │\n",
       "│ 83  │ \"Consumer Discretionary\" │ 175.38 │ 2.25           │ 15.25          │\n",
       "│ 84  │ \"Consumer Discretionary\" │ 82.19  │ 2.52           │ 14.86          │\n",
       "│ 85  │ \"Consumer Discretionary\" │ 99.46  │ 1.98           │ 41.79          │\n",
       "│ 86  │ \"Consumer Discretionary\" │ 64.02  │ 2.66           │ 15.83          │\n",
       "\n",
       "│ Row │ Earnings_Share │ Book_Value │ x52_week_low │ x52_week_high │\n",
       "├─────┼────────────────┼────────────┼──────────────┼───────────────┤\n",
       "│ 1   │ 6.2            │ 39.66      │ 132.98       │ 177.83        │\n",
       "│ 2   │ 4.9            │ 40.43      │ 538.58       │ 860.86        │\n",
       "│ 3   │ 4.15           │ 22.95      │ 39.28        │ 54.15         │\n",
       "│ 4   │ 42.64          │ -64.18     │ 711.0        │ 819.54        │\n",
       "│ 5   │ 4.71           │ 17.82      │ 38.58        │ 52.33         │\n",
       "│ 6   │ 3.81           │ 15.03      │ 28.76        │ 49.4          │\n",
       "│ 7   │ 0.55           │ 15.16      │ 27.52        │ 43.43         │\n",
       "│ 8   │ 3.16           │ 16.09      │ 45.06        │ 69.11         │\n",
       "│ 9   │ 3.72           │ 31.12      │ 42.94        │ 57.79         │\n",
       "│ 10  │ 2.81           │ 8.95       │ 48.88        │ 68.59         │\n",
       "│ 11  │ 15.95          │ 149.27     │ 182.75       │ 341.5         │\n",
       "⋮\n",
       "│ 75  │ 1.64           │ 7.75       │ 23.33        │ 31.75         │\n",
       "│ 76  │ 1.64           │ 7.75       │ 23.88        │ 31.3          │\n",
       "│ 77  │ 5.97           │ 23.3       │ 158.21       │ 281.17        │\n",
       "│ 78  │ 0.44           │ 4.63       │ 17.77        │ 46.2          │\n",
       "│ 79  │ 0.44           │ 4.63       │ 19.26        │ 47.94         │\n",
       "│ 80  │ 1.92           │ 10.73      │ 24.29        │ 40.8          │\n",
       "│ 81  │ 2.55           │ 11.93      │ 48.05        │ 66.91         │\n",
       "│ 82  │ 3.48           │ 11.23      │ 33.94        │ 46.69         │\n",
       "│ 83  │ 11.5           │ 64.1       │ 145.91       │ 194.1         │\n",
       "│ 84  │ 5.53           │ 6.76       │ 62.6         │ 86.72         │\n",
       "│ 85  │ 2.38           │ 1.55       │ 79.77        │ 109.5         │\n",
       "│ 86  │ 4.04           │ -15.93     │ 59.57        │ 91.99         │\n",
       "\n",
       "│ Row │ Market_Cap │ EBITDA  │ Price_Sales │ Price_Book │\n",
       "├─────┼────────────┼─────────┼─────────────┼────────────┤\n",
       "│ 1   │ 11.18      │ 1.12    │ 1.19        │ 3.89       │\n",
       "│ 2   │ 403.7      │ 11.67   │ 2.97        │ 20.94      │\n",
       "│ 3   │ 4.57       │ 0.9707  │ 0.21        │ 1.97       │\n",
       "│ 4   │ 20.29      │ 2.39    │ 1.92        │ NA         │\n",
       "│ 5   │ 5.73       │ 1.5     │ 0.48        │ 2.23       │\n",
       "│ 6   │ 13.96      │ 2.6     │ 0.35        │ 2.92       │\n",
       "│ 7   │ 8.87       │ 0.8076  │ 0.98        │ 2.76       │\n",
       "│ 8   │ 11.94      │ 1.21    │ 0.73        │ 3.97       │\n",
       "│ 9   │ 40.31      │ 4.76    │ 2.47        │ 1.79       │\n",
       "│ 10  │ 27.82      │ 3.1     │ 2.11        │ 7.59       │\n",
       "│ 11  │ 86.92      │ 10.73   │ 3.0         │ 2.17       │\n",
       "⋮\n",
       "│ 75  │ 56.49      │ 6.95    │ 2.02        │ 3.96       │\n",
       "│ 76  │ 55.73      │ 6.95    │ 1.99        │ 3.9        │\n",
       "│ 77  │ 16.8       │ 0.79709 │ 3.78        │ 11.83      │\n",
       "│ 78  │ 7.94       │ 0.56224 │ 1.66        │ 3.95       │\n",
       "│ 79  │ 8.63       │ 0.56224 │ 1.82        │ 4.33       │\n",
       "│ 80  │ 2.95       │ 0.49769 │ 0.85        │ 2.39       │\n",
       "│ 81  │ 21.79      │ 1.93    │ 1.83        │ 4.44       │\n",
       "│ 82  │ 17.04      │ 2.86    │ 1.32        │ 3.76       │\n",
       "│ 83  │ 13.06      │ 2.18    │ 0.63        │ 2.74       │\n",
       "│ 84  │ 8.63       │ 1.31    │ 1.68        │ 12.17      │\n",
       "│ 85  │ 10.11      │ 0.95059 │ 2.28        │ 64.59      │\n",
       "│ 86  │ 22.65      │ 1.96    │ 3.59        │ NA         │\n",
       "\n",
       "│ Row │ SEC_Filings                                                          │\n",
       "├─────┼──────────────────────────────────────────────────────────────────────┤\n",
       "│ 1   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AAP\"  │\n",
       "│ 2   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AMZN\" │\n",
       "│ 3   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AN\"   │\n",
       "│ 4   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AZO\"  │\n",
       "│ 5   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=BBBY\" │\n",
       "│ 6   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=BBY\"  │\n",
       "│ 7   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=BWA\"  │\n",
       "│ 8   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=KMX\"  │\n",
       "│ 9   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=CCL\"  │\n",
       "│ 10  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=CBS\"  │\n",
       "│ 11  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=CHTR\" │\n",
       "⋮\n",
       "│ 75  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=FOXA\" │\n",
       "│ 76  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=FOX\"  │\n",
       "│ 77  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ULTA\" │\n",
       "│ 78  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=UA\"   │\n",
       "│ 79  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=UAA\"  │\n",
       "│ 80  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=URBN\" │\n",
       "│ 81  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=VFC\"  │\n",
       "│ 82  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=VIAB\" │\n",
       "│ 83  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WHR\"  │\n",
       "│ 84  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WYN\"  │\n",
       "│ 85  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WYNN\" │\n",
       "│ 86  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=YUM\"  │\n",
       "⋮\n",
       "Last Group:\n",
       "28×15 DataFrames.SubDataFrame{Array{Int64,1}}\n",
       "│ Row │ Symbol │ Name                               │ Sector      │ Price  │\n",
       "├─────┼────────┼────────────────────────────────────┼─────────────┼────────┤\n",
       "│ 1   │ \"AES\"  │ \"AES Corp\"                         │ \"Utilities\" │ 11.33  │\n",
       "│ 2   │ \"LNT\"  │ \"Alliant Energy Corp\"              │ \"Utilities\" │ 39.28  │\n",
       "│ 3   │ \"AEE\"  │ \"Ameren Corp\"                      │ \"Utilities\" │ 54.82  │\n",
       "│ 4   │ \"AEP\"  │ \"American Electric Power\"          │ \"Utilities\" │ 66.24  │\n",
       "│ 5   │ \"AWK\"  │ \"American Water Works Company Inc\" │ \"Utilities\" │ 76.89  │\n",
       "│ 6   │ \"CNP\"  │ \"CenterPoint Energy\"               │ \"Utilities\" │ 28.0   │\n",
       "│ 7   │ \"CMS\"  │ \"CMS Energy\"                       │ \"Utilities\" │ 44.44  │\n",
       "│ 8   │ \"ED\"   │ \"Consolidated Edison\"              │ \"Utilities\" │ 76.64  │\n",
       "│ 9   │ \"D\"    │ \"Dominion Resources\"               │ \"Utilities\" │ 76.12  │\n",
       "│ 10  │ \"DTE\"  │ \"DTE Energy Co.\"                   │ \"Utilities\" │ 101.55 │\n",
       "│ 11  │ \"DUK\"  │ \"Duke Energy\"                      │ \"Utilities\" │ 81.69  │\n",
       "⋮\n",
       "│ 17  │ \"NEE\"  │ \"NextEra Energy\"                   │ \"Utilities\" │ 130.65 │\n",
       "│ 18  │ \"NI\"   │ \"NiSource Inc.\"                    │ \"Utilities\" │ 23.5   │\n",
       "│ 19  │ \"NRG\"  │ \"NRG Energy\"                       │ \"Utilities\" │ 17.1   │\n",
       "│ 20  │ \"PCG\"  │ \"PG&E Corp.\"                       │ \"Utilities\" │ 66.26  │\n",
       "│ 21  │ \"PNW\"  │ \"Pinnacle West Capital\"            │ \"Utilities\" │ 82.54  │\n",
       "│ 22  │ \"PPL\"  │ \"PPL Corp.\"                        │ \"Utilities\" │ 36.79  │\n",
       "│ 23  │ \"PEG\"  │ \"Public Serv. Enterprise Inc.\"     │ \"Utilities\" │ 44.98  │\n",
       "│ 24  │ \"SCG\"  │ \"SCANA Corp\"                       │ \"Utilities\" │ 69.81  │\n",
       "│ 25  │ \"SRE\"  │ \"Sempra Energy\"                    │ \"Utilities\" │ 110.58 │\n",
       "│ 26  │ \"SO\"   │ \"Southern Co.\"                     │ \"Utilities\" │ 50.4   │\n",
       "│ 27  │ \"WEC\"  │ \"Wec Energy Group Inc\"             │ \"Utilities\" │ 59.29  │\n",
       "│ 28  │ \"XEL\"  │ \"Xcel Energy Inc\"                  │ \"Utilities\" │ 43.82  │\n",
       "\n",
       "│ Row │ Dividend_Yield │ Price_Earnings │ Earnings_Share │ Book_Value │\n",
       "├─────┼────────────────┼────────────────┼────────────────┼────────────┤\n",
       "│ 1   │ 4.16           │ NA             │ -1.71          │ 4.24       │\n",
       "│ 2   │ 3.22           │ 24.01          │ 1.64           │ 16.96      │\n",
       "│ 3   │ 3.21           │ 20.46          │ 2.68           │ 29.28      │\n",
       "│ 4   │ 3.55           │ 53.29          │ 1.24           │ 35.38      │\n",
       "│ 5   │ 1.94           │ 29.35          │ 2.62           │ 29.3       │\n",
       "│ 6   │ 3.84           │ 28.0           │ 1.0            │ 8.03       │\n",
       "│ 7   │ 3.0            │ 22.44          │ 1.98           │ 15.23      │\n",
       "│ 8   │ 3.6            │ 18.6           │ 4.12           │ 46.88      │\n",
       "│ 9   │ 3.94           │ 22.13          │ 3.44           │ 23.26      │\n",
       "│ 10  │ 3.26           │ 21.02          │ 4.83           │ 50.22      │\n",
       "│ 11  │ 4.18           │ 26.18          │ 3.12           │ 58.62      │\n",
       "⋮\n",
       "│ 17  │ 3.0            │ 20.9           │ 6.25           │ 52.01      │\n",
       "│ 18  │ 2.95           │ 23.02          │ 1.02           │ 12.6       │\n",
       "│ 19  │ 0.69           │ NA             │ -2.22          │ 6.47       │\n",
       "│ 20  │ 2.97           │ 23.83          │ 2.78           │ 35.39      │\n",
       "│ 21  │ 3.16           │ 20.9           │ 3.95           │ 43.15      │\n",
       "│ 22  │ 4.31           │ 13.19          │ 2.79           │ 14.56      │\n",
       "│ 23  │ 3.78           │ 25.7           │ 1.75           │ 26.01      │\n",
       "│ 24  │ 3.48           │ 16.78          │ 4.16           │ 40.06      │\n",
       "│ 25  │ 3.01           │ 20.25          │ 5.46           │ 51.77      │\n",
       "│ 26  │ 4.45           │ 19.76          │ 2.55           │ 25.0       │\n",
       "│ 27  │ 3.51           │ 20.03          │ 2.96           │ 28.29      │\n",
       "│ 28  │ 3.29           │ 19.85          │ 2.21           │ 21.73      │\n",
       "\n",
       "│ Row │ x52_week_low │ x52_week_high │ Market_Cap │ EBITDA │ Price_Sales │\n",
       "├─────┼──────────────┼───────────────┼────────────┼────────┼─────────────┤\n",
       "│ 1   │ 10.27        │ 13.32         │ 7.47       │ 3.42   │ 0.56        │\n",
       "│ 2   │ 34.04        │ 40.99         │ 8.94       │ 1.03   │ 2.69        │\n",
       "│ 3   │ 46.29        │ 55.51         │ 13.3       │ 2.3    │ 2.27        │\n",
       "│ 4   │ 57.89        │ 71.32         │ 32.57      │ 5.29   │ 1.99        │\n",
       "│ 5   │ 66.63        │ 85.24         │ 13.7       │ 1.62   │ 4.17        │\n",
       "│ 6   │ 19.83        │ 28.08         │ 12.06      │ 2.09   │ 1.6         │\n",
       "│ 7   │ 38.78        │ 46.25         │ 12.42      │ 2.0    │ 1.94        │\n",
       "│ 8   │ 68.76        │ 81.88         │ 23.38      │ 3.69   │ 1.94        │\n",
       "│ 9   │ 68.71        │ 78.97         │ 47.81      │ 5.8    │ 4.08        │\n",
       "│ 10  │ 84.77        │ 102.1         │ 18.22      │ 2.24   │ 1.72        │\n",
       "│ 11  │ 72.34        │ 87.75         │ 57.15      │ 10.03  │ 2.56        │\n",
       "⋮\n",
       "│ 17  │ 110.49       │ 131.98        │ 61.09      │ 7.67   │ 3.78        │\n",
       "│ 18  │ 21.17        │ 26.94         │ 7.6        │ 1.36   │ 1.7         │\n",
       "│ 19  │ 9.84         │ 18.32         │ 5.4        │ 2.75   │ 0.44        │\n",
       "│ 20  │ 56.39        │ 66.93         │ 33.65      │ 5.16   │ 1.89        │\n",
       "│ 21  │ 69.8         │ 83.77         │ 9.19       │ 1.42   │ 2.64        │\n",
       "│ 22  │ 32.08        │ 39.92         │ 25.04      │ 4.05   │ 3.33        │\n",
       "│ 23  │ 39.28        │ 47.41         │ 22.77      │ 3.37   │ 2.52        │\n",
       "│ 24  │ 64.5         │ 76.41         │ 9.98       │ 1.6    │ 2.38        │\n",
       "│ 25  │ 92.95        │ 114.66        │ 27.71      │ 2.94   │ 2.7         │\n",
       "│ 26  │ 46.2         │ 54.64         │ 49.95      │ 7.63   │ 2.5         │\n",
       "│ 27  │ 53.66        │ 66.1          │ 18.71      │ 2.44   │ 2.5         │\n",
       "│ 28  │ 38.0         │ 45.42         │ 22.23      │ 3.65   │ 1.99        │\n",
       "\n",
       "│ Row │ Price_Book │\n",
       "├─────┼────────────┤\n",
       "│ 1   │ 2.72       │\n",
       "│ 2   │ 2.31       │\n",
       "│ 3   │ 1.87       │\n",
       "│ 4   │ 1.88       │\n",
       "│ 5   │ 2.64       │\n",
       "│ 6   │ 3.48       │\n",
       "│ 7   │ 2.91       │\n",
       "│ 8   │ 1.63       │\n",
       "│ 9   │ 3.28       │\n",
       "│ 10  │ 2.02       │\n",
       "│ 11  │ 1.4        │\n",
       "⋮\n",
       "│ 17  │ 2.51       │\n",
       "│ 18  │ 1.87       │\n",
       "│ 19  │ 2.68       │\n",
       "│ 20  │ 1.86       │\n",
       "│ 21  │ 1.92       │\n",
       "│ 22  │ 2.53       │\n",
       "│ 23  │ 1.73       │\n",
       "│ 24  │ 1.76       │\n",
       "│ 25  │ 2.12       │\n",
       "│ 26  │ 2.01       │\n",
       "│ 27  │ 2.09       │\n",
       "│ 28  │ 2.01       │\n",
       "\n",
       "│ Row │ SEC_Filings                                                         │\n",
       "├─────┼─────────────────────────────────────────────────────────────────────┤\n",
       "│ 1   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AES\" │\n",
       "│ 2   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=LNT\" │\n",
       "│ 3   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AEE\" │\n",
       "│ 4   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AEP\" │\n",
       "│ 5   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=AWK\" │\n",
       "│ 6   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=CNP\" │\n",
       "│ 7   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=CMS\" │\n",
       "│ 8   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=ED\"  │\n",
       "│ 9   │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=D\"   │\n",
       "│ 10  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=DTE\" │\n",
       "│ 11  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=DUK\" │\n",
       "⋮\n",
       "│ 17  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=NEE\" │\n",
       "│ 18  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=NI\"  │\n",
       "│ 19  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=NRG\" │\n",
       "│ 20  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=PCG\" │\n",
       "│ 21  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=PNW\" │\n",
       "│ 22  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=PPL\" │\n",
       "│ 23  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=PEG\" │\n",
       "│ 24  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=SCG\" │\n",
       "│ 25  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=SRE\" │\n",
       "│ 26  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=SO\"  │\n",
       "│ 27  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=WEC\" │\n",
       "│ 28  │ \"http://www.sec.gov/cgi-bin/browse-edgar?action=getcompany&CIK=XEL\" │"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "groupby(df,:Sector)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Julia 0.6.4",
   "language": "julia",
   "name": "julia-0.6"
  },
  "language_info": {
   "file_extension": ".jl",
   "mimetype": "application/julia",
   "name": "julia",
   "version": "0.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
